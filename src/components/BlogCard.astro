---
import type { ProcessedBlogPost } from '@/content/types';
import { getLocale } from '@/lib/i18n';
import { localizePath } from '@/lib/locale-path';
import ArrowRightCircleIcon from 'astro-heroicons/solid/ArrowRightCircle.astro';
import { Image } from 'astro:assets';

interface Props {
  post: ProcessedBlogPost;
  featured?: boolean;
  className?: string;
  aosDelay?: number;
}

const { post, featured = false, className = '', aosDelay } = Astro.props;

const data: any = post.data;
const { title, description, image, imageAlt, category } = data;

const { url, formattedPubDate, readingTime } = post;
const locale = getLocale(Astro.url.pathname);
const localizedUrl = localizePath(locale, url);
---

<article
  class:list={[
    'group relative flex flex-col overflow-hidden rounded-lg bg-white shadow-lg transition-all duration-300 hover:shadow-xl dark:bg-gray-800 group-hover:-translate-y-1',
    featured ? 'md:flex-row' : 'flex-col',
    className,
  ]}
  data-itemscope
  data-itemtype="http://schema.org/BlogPosting"
  data-aos="fade-up"
  data-aos-duration="650"
  {...typeof aosDelay === 'number' ? { 'data-aos-delay': String(aosDelay) } : {}}
>
  {
    image && (
      <div class={featured ? 'md:w-1/3' : 'w-full'}>
        <a
          href={localizedUrl}
          class="block aspect-video overflow-hidden"
          aria-label={`Bild fÃ¼r ${title}`}
          tabindex="-1"
        >
          <Image
            src={image.src}
            alt={imageAlt ? imageAlt : title}
            class="h-full w-full object-cover transition-transform duration-500 group-hover:scale-105"
            loading="lazy"
            widths={[480, 640, 768, 1024, 1280]}
            sizes={featured ? '(min-width: 768px) 33vw, 100vw' : '100vw'}
            formats={['webp', 'jpeg']}
          />
        </a>
      </div>
    )
  }

  <div class:list={['flex flex-col flex-grow', featured && image ? 'p-6 md:w-2/3' : 'p-6']}>
    <div class="flex-grow">
      {
        category && (
          <div class="mb-2">
            <a
              href={localizePath(
                locale,
                `/blog/kategorie/${typeof category === 'string' ? category.toLowerCase() : 'allgemein'}`
              )}
              class="relative z-10 inline-flex items-center px-3 py-0.5 rounded-full text-xs font-medium bg-indigo-100 text-indigo-800 dark:bg-indigo-900/30 dark:text-indigo-400 hover:bg-indigo-200 dark:hover:bg-indigo-800/50 transition-colors"
              data-itemprop="articleSection"
            >
              {category}
            </a>
          </div>
        )
      }

      <h2 class="text-2xl font-semibold text-gray-900 dark:text-white mb-2">
        <a
          href={localizedUrl}
          class="relative z-10 hover:text-emerald-600 dark:hover:text-emerald-400 transition-colors"
        >
          <span class="absolute inset-0" aria-hidden="true"></span>
          {title}
        </a>
      </h2>

      <div class="flex items-center gap-2 text-xs text-gray-500 dark:text-gray-400 mb-3">
        <time
          datetime={data.pubDate instanceof Date
            ? data.pubDate.toISOString()
            : new Date(data.pubDate as any).toISOString()}
          class="whitespace-nowrap"
          data-itemprop="datePublished"
        >
          {formattedPubDate}
        </time>
        {
          readingTime && (
            <>
              <span class="mx-1">â€¢</span>
              <span>{readingTime.text}</span>
            </>
          )
        }
        <span class="mx-1">â€¢</span>
        <a
          href={`${localizedUrl}#comments`}
          class="inline-flex items-center gap-1 text-gray-600 hover:text-emerald-600 dark:text-gray-300 dark:hover:text-emerald-400 transition-colors"
          aria-label="Kommentare ansehen"
        >
          <span aria-hidden="true">ðŸ’¬</span>
          <span id={`cc-${post.slug}`} data-entity-type="blog_post" data-entity-id={post.slug}
            >0</span
          >
          <span>Kommentare</span>
        </a>
      </div>

      {
        description && (
          <p class="mb-4 text-gray-600 dark:text-gray-300 line-clamp-3 flex-grow">{description}</p>
        )
      }
    </div>

    <div class="mt-auto pt-2">
      <a
        href={localizedUrl}
        class="relative z-10 inline-flex items-center font-semibold text-emerald-600 hover:text-emerald-500 dark:text-emerald-400 dark:hover:text-emerald-300 transition-colors group/readmore"
        aria-label={`Weiterlesen: ${title}`}
      >
        Weiterlesen
        <ArrowRightCircleIcon
          class="ml-2 h-5 w-5 transition-transform group-hover/readmore:translate-x-1"
        />
      </a>
    </div>
  </div>
</article>

<script>
  try {
    const nodes = document.querySelectorAll('[id^="cc-"][data-entity-type][data-entity-id]');
    nodes.forEach((el) => {
      const entityType = el.getAttribute('data-entity-type') || 'blog_post';
      const entityId = el.getAttribute('data-entity-id');
      if (!entityId) return;
      const endpoint = `/api/comments/count?entityType=${encodeURIComponent(entityType)}&entityId=${encodeURIComponent(entityId)}`;
      fetch(endpoint)
        .then((r) => (r.ok ? r.json() : Promise.reject(new Error('bad response'))))
        .then((json: any) => {
          const c = json?.data?.count ?? 0;
          el.textContent = String(c);
        })
        .catch(() => {
          // keep default on failure
        });
    });
  } catch {}
</script>
