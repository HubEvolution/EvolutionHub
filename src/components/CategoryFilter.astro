---
interface Props {
  categories: Array<{ name: string; count: number }>;
  selectedCategory?: string;
  baseUrl?: string;
  showAllOption?: boolean;
  className?: string;
}

const {
  categories = [],
  selectedCategory,
  baseUrl = '/blog',
  showAllOption = true,
  className = '',
} = Astro.props;

// Sortiere Kategorien nach Name
const sortedCategories = [...categories].sort((a, b) => 
  a.name.localeCompare(b.name, 'de')
);
const nonce = (Astro.locals as any).cspNonce;
---

<div class={['space-y-4', className].join(' ')}>
  <div class="relative">
    <label 
      for="category-filter" 
      class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2"
    >
      Nach Kategorie filtern
    </label>
    
    <div class="relative">
      <select 
        id="category-filter"
        class="block w-full rounded-md border border-gray-300 bg-white py-2 pl-3 pr-10 text-base focus:border-emerald-500 focus:outline-none focus:ring-1 focus:ring-emerald-500 dark:border-gray-600 dark:bg-gray-800 dark:text-white dark:focus:border-emerald-400 dark:focus:ring-emerald-400 sm:text-sm"
      >
        {showAllOption && (
          <option 
            value={baseUrl}
            selected={!selectedCategory}
            class="text-gray-900 dark:text-white"
          >
            Alle Kategorien
          </option>
        )}
        
        {sortedCategories.map(({ name, count }) => (
          <option 
            value={`${baseUrl}/kategorie/${name.toLowerCase()}`}
            selected={selectedCategory === name}
            class="text-gray-900 dark:text-white"
          >
            {name} â€“ {count}
          </option>
        ))}
      </select>
      
      <div class="pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700 dark:text-gray-300">
        <svg 
          class="h-4 w-4" 
          fill="currentColor" 
          viewBox="0 0 20 20" 
          xmlns="http://www.w3.org/2000/svg"
        >
          <path 
            fill-rule="evenodd" 
            d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" 
            clip-rule="evenodd"
          />
        </svg>
      </div>
    </div>
  </div>
  
  <div class="flex flex-wrap gap-2">
    {showAllOption && (
      <a 
        href={baseUrl}
        class={[
          'inline-flex items-center rounded-full px-3 py-1 text-sm font-medium',
          !selectedCategory 
            ? 'bg-emerald-100 text-emerald-800 dark:bg-emerald-900/30 dark:text-emerald-400' 
            : 'bg-gray-100 text-gray-600 hover:bg-gray-200 dark:bg-gray-700 dark:text-gray-300 dark:hover:bg-gray-600'
        ].join(' ')}
      >
        Alle
      </a>
    )}
    
    {sortedCategories.map(({ name, count }) => (
      <a 
        href={`${baseUrl}/kategorie/${name.toLowerCase()}`}
        class={[
          'inline-flex items-center rounded-full px-3 py-1 text-sm font-medium',
          selectedCategory === name
            ? 'bg-emerald-100 text-emerald-800 dark:bg-emerald-900/30 dark:text-emerald-400' 
            : 'bg-gray-100 text-gray-600 hover:bg-gray-200 dark:bg-gray-700 dark:text-gray-300 dark:hover:bg-gray-600'
        ].join(' ')}
      >
        {name}
        <span class="ml-2 inline-block rounded-full bg-gray-200 px-2 py-0.5 text-xs font-semibold text-gray-700 dark:bg-gray-700 dark:text-gray-200">
          {count}
        </span>
      </a>
    ))}
  </div>
</div>
<script is:inline nonce={nonce}>
  const initCategoryFilter = () => {
    const select = document.getElementById('category-filter');
    if (!select) return;
    select.addEventListener('change', (e) => {
      const target = e.target;
      const value = target && (target as any).value;
      if (typeof value === 'string' && value) {
        window.location.href = value;
      }
    });
  };
  if (document.readyState !== 'loading') {
    initCategoryFilter();
  } else {
    document.addEventListener('DOMContentLoaded', initCategoryFilter);
  }
  // Re-init after Astro view transitions if needed
  document.addEventListener('astro:after-swap', initCategoryFilter);
</script>
<style>
  /* Custom styles for the select dropdown */
  select {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
    background-position: right 0.5rem center;
    background-repeat: no-repeat;
    background-size: 1.5em 1.5em;
    padding-right: 2.5rem;
    print-color-adjust: exact;
  }
  
  /* Dark mode styles */
  @media (prefers-color-scheme: dark) {
    select {
      background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%239ca3af' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
    }
  }
</style>
