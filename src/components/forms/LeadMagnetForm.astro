---
// Lead Magnet Form Component - Optimiert für Conversion und UX
interface Props {
  leadMagnetId: string;
  title?: string;
  description?: string;
  submitText?: string;
  showCompanyField?: boolean;
  showNameFields?: boolean;
  variant?: 'modal' | 'inline' | 'sidebar';
  size?: 'sm' | 'md' | 'lg';
}

const {
  leadMagnetId,
  title = 'Kostenlosen Download anfordern',
  description = 'Geben Sie Ihre E-Mail-Adresse ein, um sofortigen Zugang zu erhalten.',
  submitText = 'Jetzt herunterladen',
  showCompanyField = false,
  showNameFields = true,
  variant = 'inline',
  size = 'md'
} = Astro.props;

// Variant-spezifische Styles
const variantStyles = {
  modal: 'bg-white dark:bg-gray-800 rounded-xl shadow-2xl border border-gray-200 dark:border-gray-700',
  inline: 'bg-gradient-to-br from-white to-gray-50 dark:from-gray-800 dark:to-gray-900 rounded-lg border border-gray-200 dark:border-gray-700',
  sidebar: 'bg-emerald-50 dark:bg-gray-800 rounded-lg border-l-4 border-emerald-500'
};

const sizeStyles = {
  sm: 'p-4',
  md: 'p-6',
  lg: 'p-8'
};

// Unique form ID für Multiple Forms auf einer Seite
const formId = `lead-magnet-form-${leadMagnetId}-${Math.random().toString(36).substr(2, 5)}`;
---

<div 
  class={`lead-magnet-form ${variantStyles[variant]} ${sizeStyles[size]} transition-all duration-300`}
  data-lead-magnet-id={leadMagnetId}
  data-variant={variant}
>
  <!-- Header -->
  <div class="text-center mb-6">
    <div class="inline-flex items-center justify-center w-12 h-12 bg-emerald-100 dark:bg-emerald-900/30 rounded-full mb-4">
      <svg class="w-6 h-6 text-emerald-600 dark:text-emerald-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
      </svg>
    </div>
    <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-2">
      {title}
    </h3>
    <p class="text-sm text-gray-600 dark:text-gray-300 leading-relaxed">
      {description}
    </p>
  </div>

  <!-- Form -->
  <form 
    id={formId}
    class="lead-magnet-form-element space-y-4"
    data-lead-magnet-id={leadMagnetId}
  >
    <!-- Name Fields (optional) -->
    {showNameFields && (
      <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
        <div>
          <label for={`${formId}-firstName`} class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
            Vorname
          </label>
          <input
            type="text"
            id={`${formId}-firstName`}
            name="firstName"
            class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-emerald-500 dark:bg-gray-700 dark:text-white transition-colors duration-200"
            placeholder="Max"
            autocomplete="given-name"
          />
        </div>
        <div>
          <label for={`${formId}-lastName`} class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
            Nachname
          </label>
          <input
            type="text"
            id={`${formId}-lastName`}
            name="lastName"
            class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-emerald-500 dark:bg-gray-700 dark:text-white transition-colors duration-200"
            placeholder="Mustermann"
            autocomplete="family-name"
          />
        </div>
      </div>
    )}

    <!-- Email Field (required) -->
    <div>
      <label for={`${formId}-email`} class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
        E-Mail-Adresse <span class="text-red-500">*</span>
      </label>
      <div class="relative">
        <input
          type="email"
          id={`${formId}-email`}
          name="email"
          required
          class="w-full px-4 py-3 pl-10 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-emerald-500 dark:bg-gray-700 dark:text-white transition-colors duration-200"
          placeholder="max.mustermann@email.de"
          autocomplete="email"
        />
        <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
          <svg class="h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 12a4 4 0 10-8 0 4 4 0 008 0zm0 0v1.5a2.5 2.5 0 005 0V12a9 9 0 10-9 9m4.5-1.206a8.959 8.959 0 01-4.5 1.207"></path>
          </svg>
        </div>
      </div>
    </div>

    <!-- Company Field (optional) -->
    {showCompanyField && (
      <div>
        <label for={`${formId}-company`} class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
          Unternehmen
        </label>
        <input
          type="text"
          id={`${formId}-company`}
          name="company"
          class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-emerald-500 dark:bg-gray-700 dark:text-white transition-colors duration-200"
          placeholder="Ihr Unternehmen"
          autocomplete="organization"
        />
      </div>
    )}

    <!-- Hidden Fields für Tracking -->
    <input type="hidden" name="leadMagnetId" value={leadMagnetId} />
    <input type="hidden" name="source" value="" id={`${formId}-source`} />
    <input type="hidden" name="utmSource" value="" id={`${formId}-utmSource`} />
    <input type="hidden" name="utmMedium" value="" id={`${formId}-utmMedium`} />
    <input type="hidden" name="utmCampaign" value="" id={`${formId}-utmCampaign`} />

    <!-- Submit Button -->
    <button
      type="submit"
      class="w-full bg-gradient-to-r from-emerald-500 to-cyan-500 text-white font-semibold py-3 px-6 rounded-lg hover:from-emerald-600 hover:to-cyan-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-emerald-500 transition-all duration-200 transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:scale-100"
      data-submit-text={submitText}
    >
      <span class="submit-text">{submitText}</span>
      <svg class="inline-block w-4 h-4 ml-2 loading-spinner hidden animate-spin" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4V2m0 20v-2m8-8h-2M4 12H2m15.364-7.364l-1.414 1.414M6.05 17.95l-1.414 1.414m12.728 0l-1.414-1.414M6.05 6.05L4.636 4.636"></path>
      </svg>
    </button>

    <!-- Privacy Notice -->
    <div class="text-center">
      <p class="text-xs text-gray-500 dark:text-gray-400 leading-relaxed">
        Mit dem Absenden erklären Sie sich mit unserer 
        <a href="/datenschutz" class="text-emerald-600 dark:text-emerald-400 hover:underline" target="_blank">
          Datenschutzerklärung
        </a> 
        einverstanden. Sie können sich jederzeit abmelden.
      </p>
    </div>
  </form>

  <!-- Success Message (initially hidden) -->
  <div class="success-message hidden text-center p-6">
    <div class="inline-flex items-center justify-center w-16 h-16 bg-green-100 dark:bg-green-900/30 rounded-full mb-4">
      <svg class="w-8 h-8 text-green-600 dark:text-green-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
      </svg>
    </div>
    <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-2">
      Download gestartet!
    </h3>
    <p class="text-sm text-gray-600 dark:text-gray-300 mb-4">
      Vielen Dank! Sie erhalten eine E-Mail mit dem Download-Link.
    </p>
    <a 
      href="#" 
      class="download-link inline-flex items-center px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 transition-colors duration-200"
      download
    >
      <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
      </svg>
      Direkt herunterladen
    </a>
  </div>

  <!-- Error Message (initially hidden) -->
  <div class="error-message hidden text-center p-4 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg">
    <div class="flex items-center justify-center mb-2">
      <svg class="w-5 h-5 text-red-600 dark:text-red-400 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
      </svg>
      <h4 class="text-sm font-medium text-red-800 dark:text-red-200">
        Ein Fehler ist aufgetreten
      </h4>
    </div>
    <p class="text-sm text-red-700 dark:text-red-300 error-text">
      Bitte versuchen Sie es später erneut.
    </p>
    <button 
      type="button" 
      class="retry-button mt-2 text-sm text-red-600 dark:text-red-400 hover:text-red-800 dark:hover:text-red-200 underline"
    >
      Erneut versuchen
    </button>
  </div>
</div>

<script>
  // Lead Magnet Form Handler
  document.addEventListener('DOMContentLoaded', () => {
    const forms = document.querySelectorAll('.lead-magnet-form-element');
    
    forms.forEach(form => {
      const leadMagnetId = form.dataset.leadMagnetId;
      const container = form.closest('.lead-magnet-form');
      const submitButton = form.querySelector('button[type="submit"]');
      const submitText = form.querySelector('.submit-text');
      const loadingSpinner = form.querySelector('.loading-spinner');
      const successMessage = container.querySelector('.success-message');
      const errorMessage = container.querySelector('.error-message');
      const retryButton = container.querySelector('.retry-button');
      const downloadLink = container.querySelector('.download-link');
      
      // UTM Parameter aus URL extrahieren
      const urlParams = new URLSearchParams(window.location.search);
      const utmSource = urlParams.get('utm_source') || '';
      const utmMedium = urlParams.get('utm_medium') || '';
      const utmCampaign = urlParams.get('utm_campaign') || '';
      const source = document.referrer || 'direct';
      
      // Hidden Fields befüllen
      form.querySelector('[name="source"]').value = source;
      form.querySelector('[name="utmSource"]').value = utmSource;
      form.querySelector('[name="utmMedium"]').value = utmMedium;
      form.querySelector('[name="utmCampaign"]').value = utmCampaign;
      
      // Form Submit Handler
      form.addEventListener('submit', async (e) => {
        e.preventDefault();
        
        // Button-State: Loading
        submitButton.disabled = true;
        submitText.textContent = 'Wird verarbeitet...';
        loadingSpinner.classList.remove('hidden');
        
        // Error-Message verstecken
        errorMessage.classList.add('hidden');
        
        try {
          // Form-Daten sammeln
          const formData = new FormData(form);
          const data = Object.fromEntries(formData.entries());
          
          // Analytics-Event senden
          if (typeof gtag !== 'undefined') {
            gtag('event', 'lead_magnet_form_submit', {
              'lead_magnet_id': leadMagnetId,
              'form_location': window.location.href,
              'event_category': 'Lead Generation'
            });
          }
          
          // API-Request
          const response = await fetch('/api/lead-magnets/download', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify(data)
          });
          
          const result = await response.json();
          
          if (result.success) {
            // Success: Form verstecken, Success-Message zeigen
            form.style.display = 'none';
            successMessage.classList.remove('hidden');
            
            // Download-Link setzen
            if (result.downloadUrl) {
              downloadLink.href = result.downloadUrl;
              downloadLink.download = result.fileName || 'download.pdf';
            }
            
            // Success-Analytics
            if (typeof gtag !== 'undefined') {
              gtag('event', 'lead_magnet_download_success', {
                'lead_magnet_id': leadMagnetId,
                'lead_id': result.leadId,
                'event_category': 'Lead Generation'
              });
            }
            
            // Console-Log für Development
            console.log('✅ Lead Magnet Success:', result);
            
          } else {
            throw new Error(result.error || 'Unbekannter Fehler');
          }
          
        } catch (error) {
          console.error('❌ Lead Magnet Form Error:', error);
          
          // Error-Message anzeigen
          errorMessage.classList.remove('hidden');
          const errorText = errorMessage.querySelector('.error-text');
          errorText.textContent = error.message || 'Ein unerwarteter Fehler ist aufgetreten.';
          
          // Error-Analytics
          if (typeof gtag !== 'undefined') {
            gtag('event', 'lead_magnet_form_error', {
              'lead_magnet_id': leadMagnetId,
              'error_message': error.message,
              'event_category': 'Lead Generation'
            });
          }
          
        } finally {
          // Button-State zurücksetzen
          submitButton.disabled = false;
          submitText.textContent = submitButton.dataset.submitText;
          loadingSpinner.classList.add('hidden');
        }
      });
      
      // Retry Button Handler
      retryButton?.addEventListener('click', () => {
        errorMessage.classList.add('hidden');
        form.style.display = 'block';
        successMessage.classList.add('hidden');
      });
      
      // Form-Impression-Tracking
      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            if (typeof gtag !== 'undefined') {
              gtag('event', 'lead_magnet_form_impression', {
                'lead_magnet_id': leadMagnetId,
                'form_location': window.location.href
              });
            }
            observer.unobserve(entry.target);
          }
        });
      }, {
        threshold: 0.5,
        rootMargin: '0px 0px -100px 0px'
      });
      
      observer.observe(container);
    });
  });
</script>

<style>
  .lead-magnet-form {
    background-image: linear-gradient(135deg, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0.05) 100%);
    backdrop-filter: blur(10px);
  }
  
  .lead-magnet-form:hover {
    transform: translateY(-2px);
    box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
  }
  
  .lead-magnet-form input:focus,
  .lead-magnet-form textarea:focus {
    box-shadow: 0 0 0 3px rgba(16, 185, 129, 0.1);
  }
  
  @media (prefers-reduced-motion: reduce) {
    .lead-magnet-form,
    .lead-magnet-form button,
    .loading-spinner {
      transform: none !important;
      transition: none !important;
      animation: none !important;
    }
  }
</style>
