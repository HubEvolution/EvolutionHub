---
interface Props {
  user: {
    id: string;
    email: string;
    name: string;
    username: string;
    image?: string;
  };
}

const { user } = Astro.props;
---
<div class="p-6 bg-white rounded-lg shadow-md dark:bg-gray-800">
  <div class="flex items-center space-x-4">
    <div class="flex-shrink-0">
      <img 
        class="w-16 h-16 rounded-full border-4 border-emerald-400" 
        src={user.image || '/assets/svg/logo.svg'} 
        alt="Benutzer-Avatar"
      />
    </div>
    <div>
      <h3 class="text-xl font-bold text-gray-900 dark:text-white">{user.name}</h3>
      <p class="text-sm text-gray-500 dark:text-gray-400">{user.email}</p>
    </div>
  </div>
  <div class="mt-6">
    <h4 class="text-lg font-medium text-gray-900 dark:text-white">Konto-Aktionen</h4>
    <div class="mt-4 space-y-3">
      <button id="logout-button" class="w-full px-4 py-2 text-sm font-medium text-white bg-red-600 rounded-lg hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500">
        Abmelden
      </button>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const logoutButton = document.getElementById('logout-button');

    logoutButton?.addEventListener('click', async () => {
      try {
        const response = await fetch('/api/user/logout', { method: 'POST' });
        if (response.ok) {
          window.location.href = '/';
        } else {
          alert('Abmeldung fehlgeschlagen.');
        }
      } catch (error) {
        console.error('Logout failed:', error);
        alert('Abmeldung fehlgeschlagen.');
      }
    });
  });
</script>
