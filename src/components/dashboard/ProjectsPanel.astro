---
// src/components/dashboard/ProjectsPanel.astro
import Card from '../ui/Card.astro';
import Skeleton from '../ui/Skeleton.astro';
import type { ProjectCard } from '../../types/dashboard';

interface Props {
  projects: ProjectCard[];
  title?: string;
}

const { 
  projects,
  title = 'Your Projects' 
} = Astro.props;

const loading = !projects;

const getStatusColor = (status: string) => {
  switch (status) {
    case 'active':
      return 'bg-green-500';
    case 'completed':
      return 'bg-blue-500';
    case 'on-hold':
      return 'bg-yellow-500';
    case 'archived':
      return 'bg-gray-500';
    default:
      return 'bg-gray-400';
  }
};

const formatDate = (dateString: string): string => {
  return new Date(dateString).toLocaleDateString('de-DE', {
    month: 'short',
    day: 'numeric',
    year: 'numeric'
  });
};
---

<Card title={title} className="">
  <div class="space-y-4">
    {loading ? (
      // Skeleton loader
      Array(2).fill(0).map((_, i) => (
        <div class="space-y-2 p-4 rounded-lg bg-gray-100 dark:bg-white/5">
          <Skeleton width="60%" height="1.25rem" />
          <Skeleton width="90%" height="0.875rem" />
          <div class="pt-2">
            <Skeleton width="100%" height="0.5rem" className="rounded-full" />
          </div>
        </div>
      ))
    ) : projects.length === 0 ? (
      <div class="text-center py-8 text-gray-500 dark:text-gray-400">
        <p>Keine Projekte gefunden</p>
        <button class="mt-2 text-primary hover:text-primary-light text-sm font-medium">
          Erstelle dein erstes Projekt
        </button>
      </div>
    ) : (
      <div class="grid grid-cols-1 gap-4">
        {projects.map((project) => (
          <div 
            class="p-4 rounded-lg bg-gray-50 dark:bg-white/5 hover:bg-gray-100 dark:hover:bg-white/10 transition-colors cursor-pointer border border-gray-200 dark:border-white/5"
          >
            <div class="flex justify-between items-start">
              <h4 class="font-medium text-gray-800 dark:text-white">{project.title}</h4>
              <span class={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium text-white ${getStatusColor(project.status)}`}>
                {project.status.charAt(0).toUpperCase() + project.status.slice(1)}
              </span>
            </div>
            
            <p class="mt-1 text-sm text-gray-600 dark:text-gray-300 line-clamp-2">
              {project.description}
            </p>
            
            <div class="mt-3">
              <div class="flex justify-between text-xs text-gray-500 dark:text-gray-400 mb-1">
                <span>Fortschritt</span>
                <span>{project.progress}%</span>
              </div>
              <div class="w-full bg-gray-200 dark:bg-gray-700 rounded-full h-1.5">
                <div 
                  class="h-1.5 rounded-full bg-gradient-to-r from-primary to-purple-600" 
                  style={`width: ${project.progress}%`}
                ></div>
              </div>
            </div>
            
            <div class="mt-3 flex items-center justify-between">
              <div class="flex -space-x-2">
                {project.members.map((member, i) => (
                  <div 
                    class="w-6 h-6 rounded-full bg-gray-600 flex items-center justify-center text-xs text-white border-2 border-gray-800"
                    title={member}
                  >
                    {member.substring(0, 2).toUpperCase()}
                  </div>
                ))}
              </div>
              <span class="text-xs text-gray-500 dark:text-gray-400">
                Aktualisiert {formatDate(project.lastUpdated)}
              </span>
            </div>
          </div>
        ))}
      </div>
    )}
    
    {!loading && projects.length > 0 && (
      <div class="pt-2">
        <button class="w-full py-2 text-sm text-center text-primary hover:text-primary-light transition-colors rounded-lg border border-dashed border-gray-300 dark:border-gray-600 hover:border-primary/50">
          + Neues Projekt hinzuf√ºgen
        </button>
      </div>
    )}
  </div>
</Card>
