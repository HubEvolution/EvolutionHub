---
import BaseLayout from '@/layouts/BaseLayout.astro';
import { getI18n, getI18nArray } from '@/utils/i18n';
import TypewriterComponent from '@/components/scripts/TypewriterComponent.astro';
import TestimonialsRotatingGrid from '@/components/landing/TestimonialsRotatingGrid';
import AosWrapper from '@/components/AosWrapper.astro';
import HeroNebula from '@/components/landing/HeroNebula';
import { isLandingV2Enabled, getLandingBgVariant } from '@/utils/feature-flags';
import HoloFeaturePanel from '@/components/landing/HoloFeaturePanel.astro';
import CardGraph from '@/components/landing/CardGraph';
import StarfieldBackdrop from '@/components/landing/StarfieldBackdrop';
import ConnectionCTA from '@/components/landing/ConnectionCTA.astro';
import LandingBackground from '@/components/landing/LandingBackground';
import '@/styles/landing.css';

import { getLocale } from '@/lib/i18n';
import { localizePath } from '@/lib/locale-path';
const locale = getLocale(Astro.url.pathname);
const t = getI18n(locale);
const tArr = getI18nArray(locale);
const heroTypewriterTexts = tArr('pages.home.hero.typewriter');
const landingV2 = isLandingV2Enabled();
const bgVariant = getLandingBgVariant();
const heroSubtitle = landingV2
  ? t('pages.home.hero.subtitle_poetic') ?? t('pages.home.hero.subtitle')
  : t('pages.home.hero.subtitle');
const testimonials = [
  {
    quote: t('pages.home.testimonials.testimonial1.quote'),
    author: t('pages.home.testimonials.testimonial1.author'),
    role: t('pages.home.testimonials.testimonial1.role'),
  },
  {
    quote: t('pages.home.testimonials.testimonial2.quote'),
    author: t('pages.home.testimonials.testimonial2.author'),
    role: t('pages.home.testimonials.testimonial2.role'),
  },
  {
    quote: t('pages.home.testimonials.testimonial3.quote'),
    author: t('pages.home.testimonials.testimonial3.author'),
    role: t('pages.home.testimonials.testimonial3.role'),
  },
  {
    quote: t('pages.home.testimonials.testimonial4.quote'),
    author: t('pages.home.testimonials.testimonial4.author'),
    role: t('pages.home.testimonials.testimonial4.role'),
  },
  {
    quote: t('pages.home.testimonials.testimonial5.quote'),
    author: t('pages.home.testimonials.testimonial5.author'),
    role: t('pages.home.testimonials.testimonial5.role'),
  },
];
const heroTypewriterItems = heroTypewriterTexts.map((text) => ({ text }));
---
<BaseLayout title={t('pages.home.title') ?? 'Evolution Hub'} disableGlobalBg={true}>
  <div class="landing-v2">
  <LandingBackground client:load variant={bgVariant} className="z-[-1]" />
  <!-- Hero Section -->
  <section class="relative py-20 md:py-32 bg-transparent overflow-hidden">
    <div class="container mx-auto px-4 relative z-10">
      <div class="max-w-5xl mx-auto text-center">
        <AosWrapper
          tag="h1"
          class="text-5xl md:text-6xl lg:text-7xl font-extrabold mb-6 text-gray-900 dark:text-white leading-tight"
        >
          <span class="block">{t('pages.home.hero.title_part1')}</span>
          <span
            id="hero-typewriter"
            aria-live="polite"
            class="block min-h-[1.2em] whitespace-nowrap text-transparent bg-clip-text bg-gradient-to-br from-emerald-400 to-cyan-500 [text-shadow:_0_1px_0_rgb(255_255_255_/_0.6)] dark:[text-shadow:_0_1px_0_rgb(0_0_0_/_0.35)]"
            >{t('pages.home.hero.title_part2')}</span
          >
        </AosWrapper>
        <AosWrapper
          tag="p"
          delay={100}
          duration={650}
          class="text-xl md:text-2xl text-gray-700 dark:text-gray-300 mb-10 max-w-3xl mx-auto"
        >
          {heroSubtitle}
        </AosWrapper>
        <TypewriterComponent
          elementId="hero-typewriter"
          texts={heroTypewriterItems}
          defaultDelay={120}
        />
        <AosWrapper
          delay={200}
          duration={650}
          class="flex flex-col sm:flex-row justify-center gap-3 sm:gap-4"
        >
          <a
            href={localizePath(locale, '/register')}
            class="inline-flex items-center px-8 py-4 rounded-xl font-bold text-white bg-gradient-to-r from-emerald-500 to-cyan-500 hover:from-emerald-600 hover:to-cyan-600 shadow-lg hover:shadow-xl transition duration-300 focus-visible:ring-2 focus-visible:ring-emerald-500 focus-visible:ring-offset-2 focus-visible:outline-none"
          >
            {t('pages.home.hero.get_started_button')}
          </a>
          <a
            href={localizePath(locale, '/tools')}
            class="inline-flex items-center px-8 py-4 rounded-xl font-bold text-gray-800 dark:text-white bg-white dark:bg-gray-700 border border-gray-400 dark:border-gray-600 hover:bg-gray-100 dark:hover:bg-gray-600 shadow transition duration-300 focus-visible:ring-2 focus-visible:ring-emerald-500 focus-visible:ring-offset-2 focus-visible:outline-none"
          >
            {t('pages.home.hero.tools_link')}
          </a>
        </AosWrapper>
      </div>
    </div>
    <!-- Hintergrund: nur wenn globaler Background OFF ist -->
    {bgVariant === 'off' ? (
      landingV2 ? (
        <HeroNebula client:load motionLevel={2} className="z-[-1]" />
      ) : (
        <div class="absolute inset-0 pointer-events-none z-[-1]" aria-hidden="true">
          <div
            class="absolute -top-16 -left-16 w-[36rem] h-[36rem] rounded-full bg-emerald-400/90 dark:bg-emerald-500/45 blur-3xl mix-blend-overlay dark:mix-blend-screen saturate-200 brightness-160 dark:saturate-100 dark:brightness-90 animate-blob-1"
          >
          </div>
          <div
            class="absolute -bottom-20 -right-10 w-[40rem] h-[40rem] rounded-full bg-cyan-400/90 dark:bg-cyan-500/45 blur-3xl mix-blend-overlay dark:mix-blend-screen saturate-200 brightness-160 dark:saturate-100 dark:brightness-90 animate-blob-2"
          >
          </div>
          <div
            class="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 w-[28rem] h-[28rem] rounded-full bg-purple-400/80 dark:bg-purple-500/40 blur-3xl mix-blend-overlay dark:mix-blend-screen saturate-200 brightness-160 dark:saturate-100 dark:brightness-90 animate-blob-3"
          >
          </div>
          <div class="absolute bottom-0 left-1/2 -translate-x-1/2 w-full h-64 bg-transparent"></div>
        </div>
      )
    ) : null}
    <div
      class="absolute inset-0 pointer-events-none z-0 landing-hero-overlay"
      aria-hidden="true"
    />
  </section>

  <!-- Features Section -->
  <section class="py-16 md:py-24 bg-transparent">
    <div class="container mx-auto px-4">
      <div class="text-center mb-16">
        <AosWrapper
          tag="h2"
          duration={650}
          class="text-4xl font-bold text-gray-900 dark:text-white mb-4"
        >
          {t('pages.home.features.heading')}
        </AosWrapper>
        <AosWrapper
          tag="p"
          delay={100}
          duration={650}
          class="text-lg text-gray-600 dark:text-gray-300 max-w-3xl mx-auto"
        >
          {t('pages.home.features.subtitle')}
        </AosWrapper>
      </div>
      <div class="relative">
        <CardGraph client:load className="z-0" fullBleed={true} />
        <div class="grid grid-cols-1 md:grid-cols-4 gap-12 relative z-10">
          <AosWrapper duration={600} class="feature-card">
            <HoloFeaturePanel
              iconName={t('pages.home.features.feature1.icon')}
              title={t('pages.home.features.feature1.title')}
              description={landingV2
                ? (t('pages.home.features_poetic.feature1.description') ?? t('pages.home.features.feature1.description'))
                : t('pages.home.features.feature1.description')}
            />
          </AosWrapper>
          <AosWrapper delay={100} duration={600} class="feature-card">
            <HoloFeaturePanel
              iconName={t('pages.home.features.feature2.icon')}
              title={t('pages.home.features.feature2.title')}
              description={landingV2
                ? (t('pages.home.features_poetic.feature2.description') ?? t('pages.home.features.feature2.description'))
                : t('pages.home.features.feature2.description')}
            />
          </AosWrapper>
          <AosWrapper delay={200} duration={600} class="feature-card">
            <HoloFeaturePanel
              iconName={t('pages.home.features.feature3.icon')}
              title={t('pages.home.features.feature3.title')}
              description={landingV2
                ? (t('pages.home.features_poetic.feature3.description') ?? t('pages.home.features.feature3.description'))
                : t('pages.home.features.feature3.description')}
            />
          </AosWrapper>
          <AosWrapper delay={300} duration={600} class="feature-card">
            <HoloFeaturePanel
              iconName={t('pages.home.features.feature4.icon')}
              title={t('pages.home.features.feature4.title')}
              description={landingV2
                ? (t('pages.home.features_poetic.feature4.description') ?? t('pages.home.features.feature4.description'))
                : t('pages.home.features.feature4.description')}
            />
          </AosWrapper>
        </div>
      </div>
    </div>
  </section>

  <!-- Testimonials Section -->
  <section
    class="relative overflow-hidden py-16 md:py-24 bg-transparent"
  >
    <div class="container mx-auto px-4">
      <StarfieldBackdrop client:load className="z-0" density={360} fullBleed={true} />
      <div class="text-center mb-16">
        <div class="mb-3 text-sm font-medium text-emerald-300/90 tracking-wide">{t('pages.home.testimonials.trust_line') ?? 'Vertraut von 1.200+ Creators'}</div>
        <AosWrapper
          tag="h2"
          duration={650}
          class="text-4xl font-bold text-gray-900 dark:text-white mb-4"
        >
          {t('pages.home.testimonials.heading')}
        </AosWrapper>
        <AosWrapper
          tag="p"
          delay={100}
          duration={650}
          class="text-lg text-gray-600 dark:text-gray-300 max-w-2xl mx-auto"
        >
          {t('pages.home.testimonials.subtitle')}
        </AosWrapper>
      </div>
      <TestimonialsRotatingGrid client:load items={testimonials} intervalMs={6500} />
    </div>
  </section>

  <section class="py-16 md:py-24">
    <div class="container mx-auto px-4">
      <ConnectionCTA
        title={t('cta.headline')}
        subtitle={t('cta.subtitle')}
        buttonText={t('cta.button_text')}
        buttonHref={localizePath(locale, '/register')}
      />
    </div>
  </section>
  </div>
</BaseLayout>
