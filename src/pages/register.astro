---
import AuthLayout from '@/layouts/AuthLayout.astro';
import Button from '@/components/ui/Button.astro';
import FormLabel from '@/components/ui/FormLabel.astro';
import Input from '@/components/ui/Input.astro';

const locals = Astro.locals as any;
if (locals.user) {
  return Astro.redirect('/dashboard');
}
---
<AuthLayout title="Create an Account">
  <div class="relative p-6 rounded-2xl overflow-hidden bg-white dark:bg-gray-800/50 border border-gray-200 dark:border-white/10 shadow-sm">
    <h1 class="text-2xl font-bold text-center mb-6">Create your Account</h1>
    <form id="register-form">
      <div class="mb-4">
        <FormLabel for="name">Name</FormLabel>
        <Input type="text" id="name" name="name" required />
      </div>
      <div class="mb-4">
        <FormLabel for="username">Username</FormLabel>
        <Input type="text" id="username" name="username" required />
      </div>
      <div class="mb-4">
        <FormLabel for="email">Email</FormLabel>
        <Input type="email" id="email" name="email" required />
      </div>
      <div class="mb-6">
        <FormLabel for="password">Password</FormLabel>
        <Input type="password" id="password" name="password" required />
      </div>
      <div id="error-message" class="text-red-500 text-center mb-4 hidden"></div>
<!-- Turnstile entfernt -->
      <Button type="submit" className="w-full">Create Account</Button>
    </form>
    <p class="text-center mt-4 text-sm">
      Already have an account? <a href="/login" class="text-emerald-600 hover:underline">Login</a>
    </p>
  </div>
</AuthLayout>

<script>
  const form = document.getElementById('register-form') as HTMLFormElement;
  const errorMessageDiv = document.getElementById('error-message');

  form.addEventListener('submit', async (e) => {
    e.preventDefault();
    
    if (!errorMessageDiv) return;

    errorMessageDiv.classList.add('hidden');
    errorMessageDiv.textContent = '';

    const formData = new FormData(form);

    try {
      const response = await fetch('/api/auth/register', {
        method: 'POST',
        body: formData,
      });

      if (response.ok) {
        window.location.href = '/dashboard';
      } else {
        const errorText = await response.text();
        errorMessageDiv.textContent = errorText;
        errorMessageDiv.classList.remove('hidden');
      }
    } catch (error) {
      errorMessageDiv.textContent = 'An unexpected error occurred.';
      errorMessageDiv.classList.remove('hidden');
    }
  });
</script>