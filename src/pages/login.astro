---
// Redirect if user is already logged in
if (Astro.locals.user) {
  return Astro.redirect('/dashboard');
}
import AuthLayout from '@/layouts/AuthLayout.astro';
---

<AuthLayout title="Login">
  <div class="w-full max-w-md">
    <div class="glass p-8 space-y-6 border border-blue-500/20 shadow-blue-500/10">
      <div class="text-center">
        <img src="/favicon.svg" alt="Logo" class="w-16 h-16 mx-auto mb-4" />
        <h1 class="text-2xl font-bold text-white">Anmelden</h1>
        <p class="text-gray-400">Willkommen zurück!</p>
      </div>

      <div class="flex flex-col sm:flex-row gap-4">
        <button class="inline-flex items-center justify-center w-full px-6 py-2.5 rounded-lg font-medium transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 border border-gray-600 hover:bg-gray-800 focus:ring-gray-500/50 text-white">
          <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5 mr-2" viewBox="0 0 48 48"><path fill="#FFC107" d="M43.611,20.083H42V20H24v8h11.303c-1.649,4.657-6.08,8-11.303,8c-6.627,0-12-5.373-12-12c0-6.627,5.373-12,12-12c3.059,0,5.842,1.154,7.961,3.039l5.657-5.657C34.046,6.053,29.268,4,24,4C12.955,4,4,12.955,4,24s8.955,20,20,20s20-8.955,20-20C44,22.659,43.862,21.35,43.611,20.083z"></path><path fill="#FF3D00" d="M6.306,14.691l6.06,4.71c1.125-1.716,2.93-3.036,5.034-3.691l-5.66-5.66C10.15,11.1,7.784,12.6,6.306,14.691z"></path><path fill="#4CAF50" d="M24,44c5.166,0,9.86-1.977,13.409-5.192l-6.19-4.823C29.211,35.091,26.715,36,24,36c-5.202,0-9.619-3.317-11.283-7.946l-6.06,4.71C8.94,39.036,15.983,44,24,44z"></path><path fill="#1976D2" d="M43.611,20.083H42V20H24v8h11.303c-0.792,2.237-2.231,4.16-4.087,5.571l6.19,4.823C39.99,35.091,44,29.836,44,24C44,22.659,43.862,21.35,43.611,20.083z"></path></svg>
          Google
        </button>
        <button class="inline-flex items-center justify-center w-full px-6 py-2.5 rounded-lg font-medium transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 border border-gray-600 hover:bg-gray-800 focus:ring-gray-500/50 text-white">
          <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5 mr-2" viewBox="0 0 24 24"><path fill="currentColor" d="M12 2A10 10 0 0 0 2 12c0 4.42 2.87 8.17 6.84 9.5c.5.08.66-.23.66-.5v-1.69c-2.77.6-3.36-1.34-3.36-1.34c-.46-1.16-1.11-1.47-1.11-1.47c-.91-.62.07-.6.07-.6c1 .07 1.53 1.03 1.53 1.03c.87 1.5 2.3.96 2.87.73c.09-.57.36-.96.65-1.18c-2.22-.25-4.55-1.11-4.55-4.92c0-1.11.38-2 1.03-2.71c-.1-.25-.45-1.29.1-2.64c0 0 .84-.27 2.75 1.02A9.58 9.58 0 0 1 12 6.82a9.58 9.58 0 0 1 2.5-.34c1.91-1.29 2.75-1.02 2.75-1.02c.55 1.35.2 2.39.1 2.64c.65.71 1.03 1.6 1.03 2.71c0 3.82-2.34 4.66-4.57 4.91c.36.31.69.92.69 1.85V21c0 .27.16.59.67.5C19.14 20.16 22 16.42 22 12A10 10 0 0 0 12 2Z"></path></svg>
          GitHub
        </button>
      </div>

      <div class="flex items-center">
        <hr class="flex-grow border-gray-600" />
        <span class="mx-4 text-xs text-gray-400">ODER</span>
        <hr class="flex-grow border-gray-600" />
      </div>

      <form id="login-form" class="space-y-4">
        <div class="relative">
          <div class="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none">
            <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5 text-gray-400" viewBox="0 0 24 24"><path fill="currentColor" d="M22 6c0-1.1-.9-2-2-2H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6zm-2 0l-8 5l-8-5h16zm0 12H4V8l8 5l8-5v10z"></path></svg>
          </div>
          <input type="email" id="email" name="email" class="pl-10 bg-gray-700 border border-gray-600 placeholder-gray-400 text-white sm:text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5" placeholder="E-Mail" required />
        </div>
        <div class="relative">
          <div class="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none">
            <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5 text-gray-400" viewBox="0 0 24 24"><path fill="currentColor" d="M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm-6 9c-1.1 0-2-.9-2-2s.9-2 2-2s2 .9 2 2s-.9 2-2 2zm3.1-9H8.9V6c0-1.71 1.39-3.1 3.1-3.1s3.1 1.39 3.1 3.1v2z"></path></svg>
          </div>
          <input type="password" id="password" name="password" class="font-mono pl-10 pr-10 bg-gray-700 border border-gray-600 placeholder-gray-400 text-white sm:text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5" placeholder="Passwort" required />
          <button type="button" class="absolute inset-y-0 right-0 flex items-center pr-3" data-toggle-password="password">
            <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5 text-gray-400 hover:text-white" viewBox="0 0 24 24"><path fill="currentColor" d="M12 9a3 3 0 0 0-3 3a3 3 0 0 0 3 3a3 3 0 0 0 3-3a3 3 0 0 0-3-3m0 8a5 5 0 0 1-5-5a5 5 0 0 1 5-5a5 5 0 0 1 5 5a5 5 0 0 1-5 5m0-12.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5Z"></path></svg>
          </button>
        </div>
<div class="flex items-center justify-between">
          <div class="flex items-start">
            <div class="flex items-center h-5">
              <input id="remember" aria-describedby="remember" type="checkbox" class="w-4 h-4 border border-gray-600 rounded bg-gray-700 focus:ring-3 focus:ring-primary-300">
            </div>
            <div class="ml-3 text-sm">
              <label for="remember" class="text-gray-400">Angemeldet bleiben</label>
            </div>
          </div>
          <a href="/forgot-password" class="text-sm font-medium text-primary-500 hover:underline">Passwort vergessen?</a>
        </div>
        <button type="submit" class="inline-flex items-center justify-center w-full px-6 py-2.5 rounded-lg font-medium transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 bg-primary-600 text-white hover:bg-primary-700 focus:ring-primary-500/50">Anmelden</button>
        <p id="error-message" class="text-sm font-medium text-red-500 text-center"></p>
      </form>
      <div class="text-sm text-center text-gray-400">
        Noch kein Konto? <a href="/register" class="font-medium text-primary-500 hover:underline">Registrieren</a>
      </div>
    </div>
  </div>
</AuthLayout>

<script>
  const form = document.getElementById('login-form');
  const errorMessage = document.getElementById('error-message');
  const passwordInput = document.getElementById('password') as HTMLInputElement;

  // --- Hilfsfunktion für Passwort-Anzeige ---
  const setupPasswordDisplay = (input: HTMLInputElement) => {
    let realPassword = '';
    let hideTimeout: number;

    const handleInput = (e: InputEvent) => {
      // Wenn die Sichtbarkeit umgeschaltet ist (Typ ist 'text'), machen wir nichts.
      // Das 'echte' Passwort wird direkt im Feld angezeigt.
      if (input.type === 'text') {
        realPassword = input.value;
        return;
      }
      
      // Synchronisiere das 'echte' Passwort mit dem Wert des Feldes.
      // Der Browser behält den echten Wert, auch wenn der Typ 'password' ist.
      realPassword = input.value;

      // Ändere den Typ vorübergehend auf 'text', um die manuelle Maskierung anzuzeigen.
      input.type = 'text';
      
      // Ersetze den angezeigten Wert durch die maskierte Version mit dem letzten Zeichen.
      input.value = '●'.repeat(realPassword.length - 1) + realPassword.slice(-1);
      
      // Setze den Cursor an die richtige Position.
      input.setSelectionRange(realPassword.length, realPassword.length);

      // Setze einen Timeout, um den Typ wieder auf 'password' zu ändern.
      clearTimeout(hideTimeout);
      hideTimeout = window.setTimeout(() => {
        if (document.activeElement === input) {
          input.type = 'password';
          // Setze den Wert zurück auf das 'echte' Passwort. Der Browser wird es maskieren.
          input.value = realPassword;
          input.setSelectionRange(realPassword.length, realPassword.length);
        }
      }, 500);
    };

    // Wenn der Benutzer das Feld verlässt, stelle sicher, dass es wieder ein Passwortfeld ist.
    const handleBlur = () => {
      clearTimeout(hideTimeout);
      input.type = 'password';
      input.value = realPassword;
    };

    input.addEventListener('input', handleInput as EventListener);
    input.addEventListener('blur', handleBlur);

    // Gibt eine Funktion zurück, um das echte Passwort abzurufen.
    return {
      getRealPassword: () => realPassword,
      cleanup: () => {
        input.removeEventListener('input', handleInput as EventListener);
        input.removeEventListener('blur', handleBlur);
      }
    };
  };

  const passwordManager = setupPasswordDisplay(passwordInput);

  // --- Passwort-Sichtbarkeit (Umschalten) ---
  const eyeOpenIcon = `<svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5 text-gray-400 hover:text-white" viewBox="0 0 24 24"><path fill="currentColor" d="M12 9a3 3 0 0 0-3 3a3 3 0 0 0 3 3a3 3 0 0 0 3-3a3 3 0 0 0-3-3m0 8a5 5 0 0 1-5-5a5 5 0 0 1 5-5a5 5 0 0 1 5 5a5 5 0 0 1-5 5m0-12.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5Z"></path></svg>`;
  const eyeClosedIcon = `<svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5 text-gray-400 hover:text-white" viewBox="0 0 24 24"><path fill="currentColor" d="M12 17.5c-2.05 0-3.81-1-5-2.5c-1.19-1.5-2.14-3.22-2.66-4.5H3.21c.52 1.28 1.47 3 2.66 4.5c1.19 1.5 2.95 2.5 5 2.5s3.81-1 5-2.5c1.19-1.5 2.14-3.22 2.66-4.5h-1.13c-.52 1.28-1.47 3-2.66 4.5c-1.19 1.5-2.95 2.5-5 2.5zm-9-5c1.73-4.39 6-7.5 11-7.5s9.27 3.11 11 7.5c-1.73 4.39-6 7.5-11-7.5S4.73 16.89 3 12.5zm9-5a3 3 0 0 0-3 3a3 3 0 0 0 3 3a3 3 0 0 0 3-3a3 3 0 0 0-3-3Z"></path></svg>`;
  
  document.querySelectorAll('[data-toggle-password]').forEach(button => {
    button.addEventListener('click', () => {
      const targetId = button.getAttribute('data-toggle-password');
      if (targetId) {
        const passwordField = document.getElementById(targetId) as HTMLInputElement;
        if (passwordField) {
          const isPassword = passwordField.type === 'password';
          passwordField.type = isPassword ? 'text' : 'password';
          button.innerHTML = isPassword ? eyeClosedIcon : eyeOpenIcon;
          // Setze den Wert auf das 'echte' Passwort, wenn es sichtbar gemacht wird.
          passwordField.value = passwordManager.getRealPassword();
        }
      }
    });
  });

  // --- Formular-Submit ---
  if (form && errorMessage) {
    form.addEventListener('submit', async (event) => {
      event.preventDefault();
      errorMessage.textContent = '';

      const email = (document.getElementById('email') as HTMLInputElement).value;
      const password = passwordManager.getRealPassword();

      try {
        const response = await fetch('/api/auth/login', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ email, password }),
        });

        if (response.ok) {
          window.location.href = '/dashboard';
        } else if (response.status === 401) {
          errorMessage.textContent = 'Ungültige Anmeldedaten. Bitte versuchen Sie es erneut.';
        } else {
          errorMessage.textContent = 'Ein unerwarteter Fehler ist aufgetreten.';
        }
      } catch (error) {
        console.error('Login-Fehler:', error);
        errorMessage.textContent = 'Netzwerkfehler. Bitte überprüfen Sie Ihre Verbindung.';
      }
    });
  }
</script>