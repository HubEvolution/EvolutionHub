---
import AuthLayout from '@/layouts/AuthLayout.astro';
import Button from '@/components/ui/Button.astro';

// URL-Parameter auslesen
const url = Astro.url;
const error = url.searchParams.get('error');

// Benutzer sollte bereits eingeloggt sein (Session wurde bei Verifikation erstellt)
const locals = Astro.locals as any;
const user = locals.user;

// Falls kein eingeloggter Benutzer oder Fehler -> entsprechende Behandlung
let pageState: 'success' | 'error' | 'no_session' = 'success';
let errorMessage = '';

if (error) {
  pageState = 'error';
  switch (error) {
    case 'InvalidVerificationLink':
      errorMessage = 'Der BestÃ¤tigungslink ist ungÃ¼ltig oder fehlerhaft.';
      break;
    case 'VerificationLinkExpired':
      errorMessage = 'Der BestÃ¤tigungslink ist abgelaufen. Bitte registrieren Sie sich erneut.';
      break;
    case 'VerificationLinkAlreadyUsed':
      errorMessage = 'Dieser BestÃ¤tigungslink wurde bereits verwendet.';
      break;
    case 'UserNotFound':
      errorMessage = 'Benutzer konnte nicht gefunden werden.';
      break;
    case 'ServerError':
      errorMessage = 'Ein Serverfehler ist aufgetreten. Bitte versuchen Sie es spÃ¤ter erneut.';
      break;
    default:
      errorMessage = 'Ein unbekannter Fehler ist aufgetreten.';
  }
} else if (!user) {
  pageState = 'no_session';
  errorMessage = 'Session nicht gefunden. Bitte loggen Sie sich ein.';
}
---

<AuthLayout title={pageState === 'success' ? 'E-Mail erfolgreich bestÃ¤tigt' : 'E-Mail-BestÃ¤tigung fehlgeschlagen'}>
  {pageState === 'success' && (
    <div class="relative p-8 rounded-2xl overflow-hidden bg-white dark:bg-gray-800/50 border border-gray-200 dark:border-white/10 shadow-sm max-w-lg mx-auto">
      <!-- Success Animation Container -->
      <div class="text-center mb-8">
        <!-- Animated Success Icon -->
        <div class="relative inline-flex items-center justify-center w-20 h-20 mb-6">
          <div class="absolute inset-0 bg-gradient-to-r from-emerald-500 to-cyan-500 rounded-full animate-ping opacity-25"></div>
          <div class="relative flex items-center justify-center w-20 h-20 bg-gradient-to-r from-emerald-500 to-cyan-500 rounded-full">
            <svg class="w-10 h-10 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/>
            </svg>
          </div>
        </div>

        <h1 class="text-3xl font-bold text-gray-900 dark:text-white mb-3">
          ðŸŽ‰ Willkommen bei EvolutionHub!
        </h1>
        
        <p class="text-lg text-gray-600 dark:text-gray-300 mb-2">
          Ihre E-Mail-Adresse wurde erfolgreich bestÃ¤tigt
        </p>
        
        {user && (
          <p class="text-sm text-gray-500 dark:text-gray-400">
            Hallo <span class="font-semibold text-emerald-600 dark:text-emerald-400">{user.name}</span>! 
            Ihr Konto ist jetzt vollstÃ¤ndig aktiviert.
          </p>
        )}
      </div>

      <!-- Welcome Benefits -->
      <div class="bg-gradient-to-r from-emerald-50 to-cyan-50 dark:from-emerald-900/20 dark:to-cyan-900/20 rounded-lg p-6 mb-8">
        <h2 class="text-lg font-semibold text-gray-900 dark:text-white mb-4 text-center">
          Das erwartet Sie in EvolutionHub:
        </h2>
        
        <div class="space-y-3">
          <div class="flex items-start">
            <div class="flex-shrink-0 w-6 h-6 bg-gradient-to-r from-emerald-500 to-cyan-500 rounded-full flex items-center justify-center mr-3 mt-0.5">
              <svg class="w-3 h-3 text-white" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"/>
              </svg>
            </div>
            <div>
              <p class="text-sm font-medium text-gray-900 dark:text-white">PersÃ¶nliches Dashboard</p>
              <p class="text-xs text-gray-600 dark:text-gray-400">Ãœberblick Ã¼ber alle Ihre Projekte und AktivitÃ¤ten</p>
            </div>
          </div>
          
          <div class="flex items-start">
            <div class="flex-shrink-0 w-6 h-6 bg-gradient-to-r from-emerald-500 to-cyan-500 rounded-full flex items-center justify-center mr-3 mt-0.5">
              <svg class="w-3 h-3 text-white" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"/>
              </svg>
            </div>
            <div>
              <p class="text-sm font-medium text-gray-900 dark:text-white">Moderne ProduktivitÃ¤ts-Tools</p>
              <p class="text-xs text-gray-600 dark:text-gray-400">Optimieren Sie Ihren Arbeitsalltag mit smarten Features</p>
            </div>
          </div>
          
          <div class="flex items-start">
            <div class="flex-shrink-0 w-6 h-6 bg-gradient-to-r from-emerald-500 to-cyan-500 rounded-full flex items-center justify-center mr-3 mt-0.5">
              <svg class="w-3 h-3 text-white" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"/>
              </svg>
            </div>
            <div>
              <p class="text-sm font-medium text-gray-900 dark:text-white">New Work-Community</p>
              <p class="text-xs text-gray-600 dark:text-gray-400">Verbinden Sie sich mit Gleichgesinnten</p>
            </div>
          </div>
        </div>
      </div>

      <!-- Call to Action -->
      <div class="text-center">
        <Button className="w-full bg-gradient-to-r from-emerald-600 to-cyan-600 hover:from-emerald-700 hover:to-cyan-700 text-white font-semibold py-3 px-6 text-lg">
          <a href="/dashboard" class="block w-full h-full">
            ðŸš€ Zum Dashboard
          </a>
        </Button>
        
        <p class="text-xs text-gray-500 dark:text-gray-400 mt-4">
          Sie werden automatisch in <span id="countdown">10</span> Sekunden weitergeleitet
        </p>
      </div>
    </div>
  )}

  {pageState === 'error' && (
    <div class="relative p-8 rounded-2xl overflow-hidden bg-white dark:bg-gray-800/50 border border-red-200 dark:border-red-800 shadow-sm max-w-lg mx-auto">
      <!-- Error Icon -->
      <div class="text-center mb-6">
        <div class="inline-flex items-center justify-center w-16 h-16 bg-red-100 dark:bg-red-900/20 rounded-full mb-4">
          <svg class="w-8 h-8 text-red-600 dark:text-red-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.732 15.5c-.77.833.192 2.5 1.732 2.5z"/>
          </svg>
        </div>
        
        <h1 class="text-2xl font-bold text-gray-900 dark:text-white mb-2">
          E-Mail-BestÃ¤tigung fehlgeschlagen
        </h1>
        
        <p class="text-red-600 dark:text-red-400 text-sm mb-4">
          {errorMessage}
        </p>
      </div>

      <!-- Action Buttons -->
      <div class="space-y-4">
        <Button className="w-full bg-emerald-600 hover:bg-emerald-700 text-white">
          <a href="/register" class="block w-full h-full">
            ðŸ”„ Neue Registrierung
          </a>
        </Button>
        
        <Button className="w-full bg-gray-600 hover:bg-gray-700 text-white">
          <a href="/login" class="block w-full h-full">
            ðŸ”‘ Zum Login
          </a>
        </Button>
      </div>
    </div>
  )}

  {pageState === 'no_session' && (
    <div class="relative p-8 rounded-2xl overflow-hidden bg-white dark:bg-gray-800/50 border border-amber-200 dark:border-amber-800 shadow-sm max-w-lg mx-auto">
      <!-- Warning Icon -->
      <div class="text-center mb-6">
        <div class="inline-flex items-center justify-center w-16 h-16 bg-amber-100 dark:bg-amber-900/20 rounded-full mb-4">
          <svg class="w-8 h-8 text-amber-600 dark:text-amber-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.732 15.5c-.77.833.192 2.5 1.732 2.5z"/>
          </svg>
        </div>
        
        <h1 class="text-2xl font-bold text-gray-900 dark:text-white mb-2">
          Session nicht gefunden
        </h1>
        
        <p class="text-amber-600 dark:text-amber-400 text-sm mb-4">
          {errorMessage}
        </p>
      </div>

      <!-- Action Button -->
      <div class="text-center">
        <Button className="w-full bg-emerald-600 hover:bg-emerald-700 text-white">
          <a href="/login" class="block w-full h-full">
            ðŸ”‘ Jetzt einloggen
          </a>
        </Button>
      </div>
    </div>
  )}

  <!-- Support Info -->
  <div class="text-center mt-6">
    <p class="text-xs text-gray-500 dark:text-gray-400">
      Probleme? Kontaktieren Sie uns unter 
      <a href="mailto:support@hub-evolution.com" class="text-emerald-600 hover:underline">
        support@hub-evolution.com
      </a>
    </p>
  </div>
</AuthLayout>

<script>
  // Auto-redirect to dashboard after successful verification
  const pageState = document.querySelector('[data-page-state]')?.getAttribute('data-page-state');
  
  if (!pageState || pageState === 'success') {
    const countdownElement = document.getElementById('countdown');
    let countdown = 10;
    
    const interval = setInterval(() => {
      countdown--;
      if (countdownElement) {
        countdownElement.textContent = countdown.toString();
      }
      
      if (countdown <= 0) {
        clearInterval(interval);
        window.location.href = '/dashboard';
      }
    }, 1000);
    
    // Allow users to cancel auto-redirect by interacting with the page
    let userInteracted = false;
    const cancelAutoRedirect = () => {
      if (!userInteracted) {
        userInteracted = true;
        clearInterval(interval);
        if (countdownElement) {
          countdownElement.parentElement?.remove();
        }
      }
    };
    
    document.addEventListener('click', cancelAutoRedirect);
    document.addEventListener('keydown', cancelAutoRedirect);
    document.addEventListener('scroll', cancelAutoRedirect);
  }
</script>

<!-- Add data attribute for script -->
<div data-page-state={pageState} style="display: none;"></div>
