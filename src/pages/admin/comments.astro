---
import BaseLayout from '@/layouts/BaseLayout.astro';

type CommentModerationData = {
  success: boolean;
  data: {
    comments: Array<{
      id: string;
      content: string;
      author: {
        id: string;
        email: string;
        name?: string;
      };
      entityType: string;
      entityId: string;
      status: 'pending' | 'approved' | 'rejected' | 'flagged';
      createdAt: string;
      updatedAt: string;
      parentId?: string;
      reports?: Array<{
        id: string;
        reason: string;
        reportedBy: string;
        createdAt: string;
      }>;
    }>;
    stats: {
      total: number;
      pending: number;
      approved: number;
      rejected: number;
      flagged: number;
    };
  };
};

type FetchCommentsResult = { ok: boolean; status: number; data: CommentModerationData | null };

async function fetchComments() {
  try {
    const url = new URL('/api/admin/comments', Astro.url).toString();
    const res = await fetch(url, {
      headers: {
        cookie: Astro.request.headers.get('cookie') ?? '',
      },
      cache: 'no-store',
    });

    if (!res.ok) {
      return { ok: false, status: res.status, data: null } as FetchCommentsResult;
    }

    const data = (await res.json()) as CommentModerationData;
    return { ok: true, status: res.status, data } as FetchCommentsResult;
  } catch (e) {
    return { ok: false, status: 500, data: null } as FetchCommentsResult;
  }
}

const commentsResult: FetchCommentsResult = await fetchComments();
---

<BaseLayout title="Kommentar-Moderation" description="Admin-Interface für Kommentar-Moderation">
  <main class="min-h-screen bg-gray-50 dark:bg-gray-900 py-12 px-4 sm:px-6 lg:px-8">
    <div class="max-w-7xl mx-auto">
      <div class="flex items-center justify-between mb-8">
        <h1 class="text-3xl font-bold text-gray-900 dark:text-white">Kommentar-Moderation</h1>
        <div class="flex gap-4">
          <button
            id="refresh-btn"
            class="inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-emerald-500"
          >
            <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"
              ></path>
            </svg>
            Aktualisieren
          </button>
        </div>
      </div>

      {
        commentsResult.ok && commentsResult.data?.success ? (
          <div class="space-y-8">
            {/* Statistiken */}
            <section class="bg-white dark:bg-gray-800 rounded-lg shadow p-6">
              <h2 class="text-xl font-semibold text-gray-900 dark:text-white mb-4">Übersicht</h2>
              <div class="grid grid-cols-2 sm:grid-cols-5 gap-4 text-sm">
                <div class="text-center">
                  <div class="text-2xl font-bold text-gray-900 dark:text-white">
                    {commentsResult.data.data.stats.total}
                  </div>
                  <div class="text-gray-500 dark:text-gray-400">Gesamt</div>
                </div>
                <div class="text-center">
                  <div class="text-2xl font-bold text-yellow-600">
                    {commentsResult.data.data.stats.pending}
                  </div>
                  <div class="text-gray-500 dark:text-gray-400">Ausstehend</div>
                </div>
                <div class="text-center">
                  <div class="text-2xl font-bold text-green-600">
                    {commentsResult.data.data.stats.approved}
                  </div>
                  <div class="text-gray-500 dark:text-gray-400">Freigegeben</div>
                </div>
                <div class="text-center">
                  <div class="text-2xl font-bold text-red-600">
                    {commentsResult.data.data.stats.rejected}
                  </div>
                  <div class="text-gray-500 dark:text-gray-400">Abgelehnt</div>
                </div>
                <div class="text-center">
                  <div class="text-2xl font-bold text-orange-600">
                    {commentsResult.data.data.stats.flagged}
                  </div>
                  <div class="text-gray-500 dark:text-gray-400">Markiert</div>
                </div>
              </div>
            </section>

            {/* Kommentar-Liste */}
            <section class="bg-white dark:bg-gray-800 rounded-lg shadow">
              <div class="px-6 py-4 border-b border-gray-200 dark:border-gray-700">
                <h2 class="text-xl font-semibold text-gray-900 dark:text-white">Kommentare</h2>
              </div>

              {commentsResult.data.data.comments.length > 0 ? (
                <div class="overflow-x-auto">
                  <table class="min-w-full divide-y divide-gray-200 dark:divide-gray-700">
                    <thead class="bg-gray-50 dark:bg-gray-700">
                      <tr>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">
                          Kommentar
                        </th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">
                          Autor
                        </th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">
                          Status
                        </th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">
                          Entity
                        </th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">
                          Datum
                        </th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">
                          Aktionen
                        </th>
                      </tr>
                    </thead>
                    <tbody class="bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700">
                      {commentsResult.data.data.comments.map((comment: any) => (
                        <tr class="hover:bg-gray-50 dark:hover:bg-gray-700">
                          <td class="px-6 py-4">
                            <div class="max-w-xs">
                              <p
                                class="text-sm text-gray-900 dark:text-white truncate"
                                title={comment.content}
                              >
                                {comment.content}
                              </p>
                              {comment.reports && comment.reports.length > 0 && (
                                <div class="mt-1 flex items-center text-xs text-red-600">
                                  <svg class="w-3 h-3 mr-1" fill="currentColor" viewBox="0 0 20 20">
                                    <path
                                      fill-rule="evenodd"
                                      d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z"
                                      clip-rule="evenodd"
                                    />
                                  </svg>
                                  {comment.reports.length} Meldung
                                  {comment.reports.length !== 1 ? 'en' : ''}
                                </div>
                              )}
                            </div>
                          </td>
                          <td class="px-6 py-4">
                            <div class="text-sm text-gray-900 dark:text-white">
                              {comment.author.name || comment.author.email}
                            </div>
                            <div class="text-sm text-gray-500 dark:text-gray-400">
                              {comment.author.id}
                            </div>
                          </td>
                          <td class="px-6 py-4">
                            <span
                              class={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${
                                comment.status === 'pending'
                                  ? 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200'
                                  : comment.status === 'approved'
                                    ? 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200'
                                    : comment.status === 'rejected'
                                      ? 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200'
                                      : 'bg-orange-100 text-orange-800 dark:bg-orange-900 dark:text-orange-200'
                              }`}
                            >
                              {comment.status === 'pending'
                                ? 'Ausstehend'
                                : comment.status === 'approved'
                                  ? 'Freigegeben'
                                  : comment.status === 'rejected'
                                    ? 'Abgelehnt'
                                    : 'Markiert'}
                            </span>
                          </td>
                          <td class="px-6 py-4">
                            <div class="text-sm text-gray-900 dark:text-white">
                              {comment.entityType}
                            </div>
                            <div
                              class="text-sm text-gray-500 dark:text-gray-400 truncate max-w-24"
                              title={comment.entityId}
                            >
                              {comment.entityId}
                            </div>
                          </td>
                          <td class="px-6 py-4 text-sm text-gray-500 dark:text-gray-400">
                            {new Date(comment.createdAt).toLocaleDateString('de-DE')}
                          </td>
                          <td class="px-6 py-4 text-sm font-medium">
                            <div class="flex space-x-2">
                              {comment.status === 'pending' && (
                                <>
                                  <button
                                    class="text-green-600 hover:text-green-900 dark:text-green-400 dark:hover:text-green-300"
                                    onclick={`moderateComment('${comment.id}', 'approved')`}
                                    title="Freigeben"
                                  >
                                    ✓
                                  </button>
                                  <button
                                    class="text-red-600 hover:text-red-900 dark:text-red-400 dark:hover:text-red-300"
                                    onclick={`moderateComment('${comment.id}', 'rejected')`}
                                    title="Ablehnen"
                                  >
                                    ✗
                                  </button>
                                </>
                              )}
                              <button
                                class="text-blue-600 hover:text-blue-900 dark:text-blue-400 dark:hover:text-blue-300"
                                onclick={`viewCommentDetails('${comment.id}')`}
                                title="Details"
                              >
                                👁
                              </button>
                            </div>
                          </td>
                        </tr>
                      ))}
                    </tbody>
                  </table>
                </div>
              ) : (
                <div class="px-6 py-8 text-center">
                  <p class="text-gray-500 dark:text-gray-400">Keine Kommentare gefunden</p>
                </div>
              )}
            </section>
          </div>
        ) : (
          <div class="bg-yellow-50 dark:bg-yellow-900/30 border border-yellow-200 dark:border-yellow-800 rounded-lg p-6">
            <p class="text-yellow-800 dark:text-yellow-200">
              {commentsResult.status === 401
                ? 'Bitte zuerst einloggen. Danach diese Seite neu laden.'
                : commentsResult.status === 403
                  ? 'Keine Berechtigung für die Kommentar-Moderation.'
                  : 'Kommentare konnten nicht geladen werden.'}
            </p>
          </div>
        )
      }
    </div>
  </main>

  <script>
    function moderateComment(commentId: string, action: 'approved' | 'rejected') {
      if (confirm(`Kommentar wirklich ${action === 'approved' ? 'freigeben' : 'ablehnen'}?`)) {
        fetch(`/api/admin/comments/${commentId}/moderate`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ status: action }),
          credentials: 'same-origin',
        })
          .then((response) => response.json())
          .then((data) => {
            if (data.success) {
              location.reload();
            } else {
              alert('Fehler bei der Moderation: ' + (data.error?.message || 'Unbekannter Fehler'));
            }
          })
          .catch((error) => {
            console.error('Moderation error:', error);
            alert('Fehler bei der Moderation');
          });
      }
    }

    function viewCommentDetails(commentId: string) {
      // TODO: Implementiere Kommentar-Details Modal
      alert('Details-Ansicht wird in einem späteren Schritt implementiert');
    }

    // Refresh-Button Funktionalität
    document.getElementById('refresh-btn')?.addEventListener('click', () => {
      location.reload();
    });
  </script>
</BaseLayout>
