---
import BaseLayout from '@/layouts/BaseLayout.astro';
import { getLocale } from '@/lib/i18n';
import { getI18n } from '@/utils/i18n';
import { localizePath } from '@/lib/locale-path';
import Icon from '@/components/ui/Icon.astro';
import ImagEnhancerIsland from '@/components/tools/ImagEnhancerIsland';
import Card from '@/components/ui/Card';

const locale = getLocale(Astro.url.pathname);
const t = getI18n(locale);
const strings = {
  dropText: t('pages.tools.items.Imag-Enhancer.app.dropText'),
  enhance: t('pages.tools.items.Imag-Enhancer.app.enhance'),
  processing: t('pages.tools.items.Imag-Enhancer.app.processing'),
  model: t('pages.tools.items.Imag-Enhancer.app.model'),
  usage: t('pages.tools.items.Imag-Enhancer.app.usage'),
  result: t('pages.tools.items.Imag-Enhancer.app.result'),
  original: t('pages.tools.items.Imag-Enhancer.app.original'),
  allowedTypes: t('pages.tools.items.Imag-Enhancer.app.allowedTypes'),
  max: t('pages.tools.items.Imag-Enhancer.app.max'),
  download: t('pages.tools.items.Imag-Enhancer.app.download'),
  loading: t('pages.tools.items.Imag-Enhancer.app.loading'),
  quotaBanner: t('pages.tools.items.Imag-Enhancer.app.quotaBanner'),
  toasts: {
    loadQuotaError: t('pages.tools.items.Imag-Enhancer.app.toasts.loadQuotaError'),
    loadError: t('pages.tools.items.Imag-Enhancer.app.toasts.loadError'),
    quotaReached: t('pages.tools.items.Imag-Enhancer.app.toasts.quotaReached'),
    unsupportedType: t('pages.tools.items.Imag-Enhancer.app.toasts.unsupportedType'),
    fileTooLargePrefix: t('pages.tools.items.Imag-Enhancer.app.toasts.fileTooLargePrefix'),
    processingFailed: t('pages.tools.items.Imag-Enhancer.app.toasts.processingFailed'),
    successEnhanced: t('pages.tools.items.Imag-Enhancer.app.toasts.successEnhanced'),
  },
  compare: {
    sliderLabel: t('pages.tools.items.Imag-Enhancer.app.compare.sliderLabel'),
    before: t('pages.tools.items.Imag-Enhancer.app.compare.before'),
    after: t('pages.tools.items.Imag-Enhancer.app.compare.after'),
    handleAriaLabel: t('pages.tools.items.Imag-Enhancer.app.compare.handleAriaLabel'),
    keyboardHint: t('pages.tools.items.Imag-Enhancer.app.compare.keyboardHint'),
    reset: t('pages.tools.items.Imag-Enhancer.app.compare.reset'),
    loupeLabel: t('pages.tools.items.Imag-Enhancer.app.compare.loupe'),
  },
  ui: {
    fullscreen: t('pages.tools.items.Imag-Enhancer.app.fullscreen'),
    exitFullscreen: t('pages.tools.items.Imag-Enhancer.app.exitFullscreen'),
  },
};

const tool = {
  id: 'Imag-Enhancer',
  icon: 'tool',
};

// Fallback labels if auth/login or common/upgrade are not present in dictionary
const loginRaw = t('auth.login');
const loginLabel =
  typeof loginRaw === 'string' && !/\[.+_fallback_not_found\]/.test(loginRaw)
    ? loginRaw
    : locale === 'de'
      ? 'Anmelden'
      : 'Sign in';
const upgradeRaw = t('common.upgrade');
const upgradeLabel =
  typeof upgradeRaw === 'string' && !/\[.+_fallback_not_found\]/.test(upgradeRaw)
    ? upgradeRaw
    : locale === 'de'
      ? 'Upgrade'
      : 'Upgrade';
---

<BaseLayout
  title={`${t('pages.tools.items.Imag-Enhancer.name')} â€“ Evolution Hub`}
  description={t('pages.tools.items.Imag-Enhancer.description')}
  comingSoon={false}
>
  <main class="min-h-screen bg-transparent py-6 sm:py-10 lg:py-12 px-4 sm:px-6 lg:px-8">
    <div class="max-w-5xl mx-auto">
      <div class="flex items-start gap-6">
        <div class="flex-shrink-0">
          <div
            class="w-16 h-16 rounded-lg flex items-center justify-center text-3xl bg-gray-100 dark:bg-gray-800 text-gray-800 dark:text-gray-200"
          >
            <Icon
              name={tool.icon}
              class="w-10 h-10 text-gray-800 dark:text-gray-200"
              ariaLabel={t('pages.tools.items.Imag-Enhancer.name')}
            />
          </div>
        </div>
        <div>
          <h1
            class="text-2xl sm:text-3xl font-extrabold tracking-tight text-gray-900 dark:text-white"
          >
            {t('pages.tools.items.Imag-Enhancer.name')}
          </h1>
          <div class="mt-2">
            <a
              href={localizePath(locale, '/tools/imag-enhancer')}
              class="text-sm text-gray-500 dark:text-gray-400 hover:underline focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-emerald-500 focus-visible:ring-offset-2 rounded"
            >
              {t('pages.tools.details.Imag-Enhancer.back')}
            </a>
          </div>
          <p class="mt-4 text-gray-600 dark:text-gray-300">
            {t('pages.tools.items.Imag-Enhancer.description')}
          </p>
        </div>
      </div>

      {/* Guest Funnel Banner */}
      {
        (() => {
          try {
            const user = Astro.locals.user as any | null;
            if (user) return null;
          } catch {}
          const loginHref = localizePath(locale, '/login');
          const pricingHref = (() => {
            try {
              const base = localizePath(locale, '/pricing');
              const u = new URL(base, 'http://x');
              const cur = new URL(
                typeof window !== 'undefined' ? window.location.href : 'http://x'
              );
              const currentPath = cur.pathname + cur.search;
              if (currentPath.startsWith('/')) {
                u.searchParams.set('return_to', currentPath);
              }
              return u.pathname + u.search;
            } catch {
              return localizePath(locale, '/pricing');
            }
          })();
          return (
            <div
              id="guest-banner"
              class="mt-6 rounded-md border border-amber-300 bg-amber-50 dark:bg-amber-900/20 dark:border-amber-700 px-4 py-3"
            >
              <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-3">
                <p class="text-sm text-amber-900 dark:text-amber-200">{strings.quotaBanner}</p>
                <div class="flex gap-2">
                  <a
                    href={loginHref}
                    class="inline-flex items-center justify-center rounded-md bg-white dark:bg-transparent border border-amber-300 dark:border-amber-600 px-3 py-1.5 text-sm font-medium text-amber-900 dark:text-amber-100 hover:bg-amber-100 dark:hover:bg-amber-800 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-amber-500"
                  >
                    {loginLabel}
                  </a>
                  <a
                    href={pricingHref}
                    class="inline-flex items-center justify-center rounded-md bg-emerald-600 px-3 py-1.5 text-sm font-medium text-white hover:bg-emerald-700 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-emerald-500"
                  >
                    {upgradeLabel}
                  </a>
                </div>
              </div>
            </div>
          );
        })()
      }

      <Card as="section" className="mt-8 sm:mt-10 p-4 sm:p-6">
        <h2 class="text-lg sm:text-xl font-semibold text-gray-900 dark:text-white">
          {t('pages.tools.items.Imag-Enhancer.name')} App
        </h2>
        <div
          id="imag-enhancer-root"
          class="mt-6 min-h-[200px] rounded-md p-0"
          aria-label={`${t('pages.tools.items.Imag-Enhancer.name')} root`}
        >
          <ImagEnhancerIsland strings={strings} client:load />
        </div>
      </Card>
    </div>
  </main>
</BaseLayout>
