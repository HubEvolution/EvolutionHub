---
import AuthLayout from '@/layouts/AuthLayout.astro';
// // import Button from '@/components/ui/Button.astro'; // This import is unused and has been commented out.
import AuthStatusNotifier from '@/components/scripts/AuthStatusNotifier';
import Input from '@/components/ui/Input.astro';
import { getI18n } from '@/utils/i18n';

import { getLocale } from '@/lib/i18n';
const locale = getLocale(Astro.url.pathname);
const t = getI18n(locale);

const token = Astro.url.searchParams.get('token');
---

<AuthLayout title={t('pages.resetPassword.title') ?? 'Reset Password'}>
  <h1 class="text-2xl font-bold mb-6 text-center">{t('pages.resetPassword.form.heading') ?? 'Reset Password'}</h1>
  <form method="POST" action="/api/auth/reset-password">
    <input type="hidden" name="locale" value={locale} />
    <input type="hidden" name="token" value={token} />
    <div class="mb-4">
      <label for="password" class="block text-sm font-medium text-gray-700 dark:text-gray-300">{t('pages.resetPassword.form.fields.password.label') ?? 'New Password'}</label>
      <Input type="password" id="password" name="password" required />
    </div>
    <button type="submit" class="w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
      {t('pages.resetPassword.form.submit_button') ?? 'Reset Password'}
    </button>
  </form>
  <AuthStatusNotifier mode="reset-password" client:load />
  <script>
    if (typeof window !== 'undefined') {
      const url = new URL(window.location.href);
      let extractedToken = null;

      // 1) Query token support
      if (url.searchParams.has('token')) {
        extractedToken = url.searchParams.get('token');
        url.searchParams.delete('token');
      } else if (url.hash) {
        // 2) Fragment token (#token=...)
        const hashParams = new URLSearchParams(url.hash.slice(1));
        if (hashParams.has('token')) {
          extractedToken = hashParams.get('token');
          hashParams.delete('token');
          const newHash = hashParams.toString();
          url.hash = newHash ? '#' + newHash : '';
        }
      }

      if (extractedToken) {
        const input = document.querySelector('input[name="token"]');
        if (input instanceof HTMLInputElement) {
          input.value = extractedToken;
        }
      }

      const qs = url.searchParams.toString();
      const newUrl = url.pathname + (qs ? '?' + qs : '') + url.hash;
      window.history.replaceState({}, '', newUrl);
    }
  </script>
</AuthLayout>