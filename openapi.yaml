openapi: 3.0.3
info:
  title: EvolutionHub API
  version: "1.0.0"
  description: Export der Routen aus src/pages als OpenAPI 3.0 Spec
servers:
  - url: /
    description: Default server (relative)
paths:
  /api/csp-report:
    post:
      summary: Accept CSP reports
      description: Legacy CSP report and Reporting API
      x-source: src/pages/api/csp-report.ts
      operationId: postCspReport
      responses:
        "204":
          description: No Content
  /api/debug-login:
    post:
      summary: Create a debug session (development only)
      description: Debug login endpoint (dev only)
      x-source: src/pages/api/debug-login.ts
      operationId: postDebugLogin
      responses:
        "200":
          description: Debug session created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
  /api/newsletter/unsubscribe:
    post:
      summary: Unsubscribe from newsletter
      description: Removes an email from newsletter subscription list
      x-source: src/pages/api/newsletter/unsubscribe.ts
      operationId: postNewsletterUnsubscribe
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewsletterUnsubscribeRequest'
      responses:
        "200":
          description: Unsubscribed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        "400":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
  /api/billing/cancel:
    post:
      summary: Schedule subscription cancellation
      description: Marks the subscription to cancel at period end
      x-source: src/pages/api/billing/cancel.ts
      operationId: postBillingCancel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillingCancelRequest'
      responses:
        "200":
          description: Cancellation scheduled
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        "400":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
  /api/admin/users/summary:
    get:
      summary: Get user summary by email or id
      description: Returns user profile/basic subscription and credits balance. Requires admin.
      x-source: src/pages/api/admin/users/summary.ts
      operationId: getAdminUsersSummary
      parameters:
        - name: email
          in: query
          required: false
          schema:
            type: string
        - name: id
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: User summary
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        "400":
          description: Validation error (email or id required)
        "401":
          description: Unauthorized
        "403":
          description: Forbidden (not admin)
        "404":
          description: Not found
  /api/admin/credits/history:
    get:
      summary: List active credit packs
      description: Returns active credit packs for a user. Requires admin.
      x-source: src/pages/api/admin/credits/history.ts
      operationId: getAdminCreditsHistory
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Packs list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        "400":
          description: Validation error
        "401":
          description: Unauthorized
        "403":
          description: Forbidden (not admin)
  /api/admin/credits/usage:
    get:
      summary: Get credits balance
      description: Returns credits balance for a user. Requires admin.
      x-source: src/pages/api/admin/credits/usage.ts
      operationId: getAdminCreditsUsage
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Balance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        "400":
          description: Validation error
        "401":
          description: Unauthorized
        "403":
          description: Forbidden (not admin)
  /api/admin/credits/grant:
    post:
      summary: Grant credits to a user
      description: Adds credits to a user by email. Requires admin. CSRF protected.
      x-source: src/pages/api/admin/credits/grant.ts
      operationId: postAdminCreditsGrant
      parameters:
        - name: X-CSRF-Token
          in: header
          required: true
          description: Double‑Submit token; must match cookie 'csrf_token'
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email]
              properties:
                email:
                  type: string
                amount:
                  type: integer
                  description: Credits to grant (default 1000)
      responses:
        "200":
          description: Grant success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden (CSRF/Origin or not admin)
        "404":
          description: User not found
  /api/admin/credits/deduct:
    post:
      summary: Deduct credits from a user
      description: Deducts credits from a user by email. Requires admin. CSRF protected. Defaults to strict mode (rejects overdraw) unless strict=false is sent.
      x-source: src/pages/api/admin/credits/deduct.ts
      operationId: postAdminCreditsDeduct
      parameters:
        - name: X-CSRF-Token
          in: header
          required: true
          description: Double‑Submit token; must match cookie 'csrf_token'
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email]
              properties:
                email:
                  type: string
                amount:
                  type: integer
                  description: Credits to deduct (default 1000)
                strict:
                  type: boolean
                  description: If true, reject when amount exceeds current balance (default true)
      responses:
        "200":
          description: Deduct success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden (CSRF/Origin or not admin)
        "404":
          description: User not found
        "422":
          description: Validation error (e.g., insufficient_credits in strict mode)
  /api/tools:
    get:
      summary: List available tools
      description: Public tools list
      x-source: src/pages/api/tools.ts
      operationId: getTools
      responses:
        "200":
          description: Array of tools
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tool'
  /api/auth/change-password:
    post:
      summary: Change password (deprecated)
      description: Deprecated endpoint — returns 410 Gone (HTML).
      deprecated: true
      x-source: src/pages/api/auth/change-password.ts
      operationId: postAuthChangePassword
      responses:
        "410":
          description: Gone
          content:
            text/html:
              schema:
                type: string
  /api/auth/forgot-password:
    post:
      summary: Request password reset (deprecated)
      description: Deprecated endpoint — returns 410 Gone (HTML).
      deprecated: true
      x-source: src/pages/api/auth/forgot-password.ts
      operationId: postAuthForgotPassword
      responses:
        "410":
          description: Gone
          content:
            text/html:
              schema:
                type: string
  /api/auth/login:
    post:
      summary: Authenticate user (deprecated)
      description: Deprecated endpoint — returns 410 Gone (HTML).
      deprecated: true
      x-source: src/pages/api/auth/login.ts
      operationId: postAuthLogin
      responses:
        "410":
          description: Gone
          content:
            text/html:
              schema:
                type: string
  /api/auth/logout:
    get:
      summary: Logout (deprecated)
      description: Deprecated endpoint — returns 410 Gone (HTML).
      deprecated: true
      x-source: src/pages/api/auth/logout.ts
      operationId: getAuthLogout
      responses:
        "410":
          description: Gone
          content:
            text/html:
              schema:
                type: string
    post:
      summary: Logout (deprecated)
      description: Deprecated endpoint — returns 410 Gone (HTML).
      deprecated: true
      x-source: src/pages/api/auth/logout.ts
      operationId: postAuthLogout
      responses:
        "410":
          description: Gone
          content:
            text/html:
              schema:
                type: string
  /api/auth/register:
    post:
      summary: Register user (deprecated)
      description: Deprecated endpoint — returns 410 Gone (HTML).
      deprecated: true
      x-source: src/pages/api/auth/register.ts
      operationId: postAuthRegister
      responses:
        "410":
          description: Gone
          content:
            text/html:
              schema:
                type: string
  /api/auth/resend-verification:
    post:
      summary: Resend verification email (deprecated)
      description: Deprecated endpoint — returns 410 Gone (JSON).
      deprecated: true
      x-source: src/pages/api/auth/resend-verification.ts
      operationId: postAuthResendVerification
      responses:
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
  /api/auth/reset-password:
    post:
      summary: Reset password (deprecated)
      description: Deprecated endpoint — returns 410 Gone (HTML).
      deprecated: true
      x-source: src/pages/api/auth/reset-password.ts
      operationId: postAuthResetPassword
      responses:
        "410":
          description: Gone
          content:
            text/html:
              schema:
                type: string
  /api/auth/verify-email:
    get:
      summary: Verify email (deprecated)
      description: Deprecated endpoint — returns 410 Gone (HTML).
      deprecated: true
      x-source: src/pages/api/auth/verify-email.ts
      operationId: getAuthVerifyEmail
      responses:
        "410":
          description: Gone
          content:
            text/html:
              schema:
                type: string
  /api/auth/magic/request:
    post:
      summary: Request Magic Link
      description: Request a magic link for login or signup. Returns JSON success or an HTML redirect (progressive enhancement).
      x-source: src/pages/api/auth/magic/request.ts
      operationId: postAuthMagicRequest
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                r:
                  type: string
                  description: Optional relative redirect target after auth
                name:
                  type: string
                username:
                  type: string
                locale:
                  type: string
                  enum: [de, en]
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                r:
                  type: string
                name:
                  type: string
                username:
                  type: string
                locale:
                  type: string
                  enum: [de, en]
      responses:
        "200":
          description: Magic link request accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum: [true]
                  data:
                    type: object
                    properties:
                      sent:
                        type: boolean
        "303":
          description: Redirect to localized login page with success hint (HTML navigation)
  /api/auth/callback:
    get:
      summary: Magic Link callback
      description: Verifies the magic link token, creates a session, and redirects to the target route.
      x-source: src/pages/api/auth/callback.ts
      operationId: getAuthMagicCallback
      parameters:
        - name: token
          in: query
          required: true
          schema:
            type: string
        - name: email
          in: query
          required: false
          schema:
            type: string
        - name: r
          in: query
          required: false
          schema:
            type: string
      responses:
        "302":
          description: Redirect to target route (localized)
  /api/billing/session:
    post:
      summary: Create billing session
      description: Creates a Stripe checkout session
      x-source: src/pages/api/billing/session.ts
      operationId: postBillingSession
      responses:
        "200":
          description: Checkout session URL
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
  /api/dashboard/activity:
    get:
      summary: Get activity feed
      description: Returns recent user activities
      x-source: src/pages/api/dashboard/activity.ts
      operationId: getDashboardActivity
      responses:
        "200":
          description: Array of activity objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity'
  /api/dashboard/notifications:
    get:
      summary: Get notifications
      description: Returns notifications for the authenticated user
      x-source: src/pages/api/dashboard/notifications.ts
      operationId: getDashboardNotifications
      responses:
        "200":
          description: Notifications list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Notification'
  /api/dashboard/perform-action:
    post:
      summary: Perform dashboard action
      description: Executes various dashboard actions (create project, task, etc.)
      x-source: src/pages/api/dashboard/perform-action.ts
      operationId: postDashboardPerformAction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DashboardPerformActionRequest'
      responses:
        "200":
          description: Action result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
  /api/dashboard/projects:
    get:
      summary: Get projects
      description: Returns projects for the authenticated user
      x-source: src/pages/api/dashboard/projects.ts
      operationId: getDashboardProjects
      responses:
        "200":
          description: Array of projects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
  /api/dashboard/quick-actions:
    get:
      summary: Get quick actions
      description: Public quick actions
      x-source: src/pages/api/dashboard/quick-actions.ts
      operationId: getDashboardQuickActions
      responses:
        "200":
          description: Array of quick actions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QuickAction'
  /api/dashboard/stats:
    get:
      summary: Get dashboard stats
      description: Returns dashboard statistics for the user
      x-source: src/pages/api/dashboard/stats.ts
      operationId: getDashboardStats
      responses:
        "200":
          description: Stats object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stats'
  /api/admin/status:
    get:
      summary: Admin status for current user
      description: Returns current user's admin status snapshot including plan, credits and recent subscriptions. Requires admin.
      x-source: src/pages/api/admin/status.ts
      operationId: getAdminStatus
      responses:
        "200":
          description: Admin status payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
  /api/admin/metrics:
    get:
      summary: Live admin metrics
      description: Active sessions/users and user counters (24h). Requires admin.
      x-source: src/pages/api/admin/metrics.ts
      operationId: getAdminMetrics
      responses:
        "200":
          description: Metrics object in GenericResponse wrapper
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
  /api/admin/comments:
    get:
      summary: Admin comments list
      description: Returns comments and moderation stats with filters (status, entityType, entityId). Requires moderator or admin.
      x-source: src/pages/api/admin/comments/index.ts
      operationId: getAdminComments
      responses:
        "200":
          description: Comments payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
  /api/admin/comments/{id}:
    get:
      summary: Admin comment details
      description: Returns details for a single comment with admin metadata. Requires moderator or admin.
      x-source: src/pages/api/admin/comments/[id]/index.ts
      operationId: getAdminCommentById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Comment details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
    delete:
      summary: Soft‑delete (hide) comment
      description: Hides a comment (soft delete). Requires moderator or admin.
      x-source: src/pages/api/admin/comments/[id]/index.ts
      operationId: deleteAdminCommentById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: X-CSRF-Token
          in: header
          required: true
          description: Double‑Submit token; must match cookie 'csrf_token'
          schema:
            type: string
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  type: string
                notifyUser:
                  type: boolean
      responses:
        "200":
          description: Deleted (hidden)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        "403":
          description: Forbidden (CSRF/Origin or insufficient permissions)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
  /api/admin/backup/jobs:
    get:
      summary: List backup jobs
      description: Returns recent backup jobs ordered by startedAt desc. Requires admin.
      x-source: src/pages/api/admin/backup/jobs/index.ts
      operationId: getAdminBackupJobs
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 1000
            default: 50
      responses:
        "200":
          description: Jobs list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        "401":
          description: Unauthorized
  /api/admin/backup/jobs/{id}:
    get:
      summary: Get backup job
      description: Returns details for a specific backup job. Requires admin.
      x-source: src/pages/api/admin/backup/jobs/[id]/index.ts
      operationId: getAdminBackupJob
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Job details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        "404":
          description: Not found
  /api/admin/backup/jobs/{id}/progress:
    get:
      summary: Get backup progress
      description: Returns progress for a running or completed backup job. Requires admin.
      x-source: src/pages/api/admin/backup/jobs/[id]/progress.ts
      operationId: getAdminBackupJobProgress
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Progress object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        "404":
          description: Not found
  /api/admin/backup/maintenance/jobs:
    get:
      summary: List maintenance jobs
      description: Returns recent maintenance jobs ordered by startedAt desc. Requires admin.
      x-source: src/pages/api/admin/backup/maintenance/jobs/index.ts
      operationId: getAdminMaintenanceJobs
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 1000
            default: 50
      responses:
        "200":
          description: Jobs list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
  /api/admin/backup/maintenance/jobs/{id}:
    get:
      summary: Get maintenance job
      description: Returns details for a specific maintenance job. Requires admin.
      x-source: src/pages/api/admin/backup/maintenance/jobs/[id].ts
      operationId: getAdminMaintenanceJob
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Job details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        "404":
          description: Not found
  /api/admin/backup/stats:
    get:
      summary: Backup statistics
      description: Aggregated statistics for backup jobs. Requires admin.
      x-source: src/pages/api/admin/backup/stats.ts
      operationId: getAdminBackupStats
      responses:
        "200":
          description: Stats payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
  /api/admin/backup/create:
    post:
      summary: Create backup job
      description: Creates a new backup job. Requires admin.
      x-source: src/pages/api/admin/backup/create.ts
      operationId: postAdminBackupCreate
      parameters:
        - name: X-CSRF-Token
          in: header
          required: true
          description: Double‑Submit token; must match cookie 'csrf_token'
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                tables:
                  type: array
                  items:
                    type: string
      responses:
        "200":
          description: Backup job created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        "403":
          description: Forbidden (CSRF/Origin or insufficient permissions)
  /api/admin/backup/schedule:
    post:
      summary: Schedule automated backup
      description: Schedules an automated backup based on a cron expression. Requires admin.
      x-source: src/pages/api/admin/backup/schedule.ts
      operationId: postAdminBackupSchedule
      parameters:
        - name: X-CSRF-Token
          in: header
          required: true
          description: Double‑Submit token; must match cookie 'csrf_token'
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                cronExpression:
                  type: string
      responses:
        "200":
          description: Scheduled
  /api/admin/backup/maintenance/perform:
    post:
      summary: Perform system maintenance
      description: Starts a maintenance job. Requires admin.
      x-source: src/pages/api/admin/backup/maintenance/perform.ts
      operationId: postAdminMaintenancePerform
      parameters:
        - name: X-CSRF-Token
          in: header
          required: true
          description: Double‑Submit token; must match cookie 'csrf_token'
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  enum: [cleanup, optimization, migration, repair]
                description:
                  type: string
      responses:
        "200":
          description: Maintenance started
  /api/admin/backup/cleanup:
    post:
      summary: Cleanup old backups
      description: Deletes old completed backups based on retention policy. Requires admin.
      x-source: src/pages/api/admin/backup/cleanup.ts
      operationId: postAdminBackupCleanup
      parameters:
        - name: X-CSRF-Token
          in: header
          required: true
          description: Double‑Submit token; must match cookie 'csrf_token'
          schema:
            type: string
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                retentionDays:
                  type: integer
      responses:
        "200":
          description: Cleanup result
  /api/admin/backup/verify/{id}:
    post:
      summary: Verify backup integrity
      description: Verifies integrity of a completed backup by ID. Requires admin.
      x-source: src/pages/api/admin/backup/verify/[id].ts
      operationId: postAdminBackupVerify
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: X-CSRF-Token
          in: header
          required: true
          description: Double‑Submit token; must match cookie 'csrf_token'
          schema:
            type: string
      responses:
        "200":
          description: Verification result
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
  /api/admin/comments/{id}/moderate:
    post:
      summary: Moderate a comment
      description: Approve, reject, flag or hide a comment. Requires moderator or admin.
      x-source: src/pages/api/admin/comments/[id]/moderate.ts
      operationId: postAdminCommentModerate
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: X-CSRF-Token
          in: header
          required: true
          description: Double‑Submit token; must match cookie 'csrf_token'
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  type: string
                  enum: [approve, reject, flag, hide]
                reason:
                  type: string
                notifyUser:
                  type: boolean
              required:
                - action
      responses:
        "200":
          description: Moderation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        "403":
          description: Forbidden (CSRF/Origin or insufficient permissions)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
  /api/admin/comments/bulk-moderate:
    post:
      summary: Bulk moderate comments
      description: Performs a bulk moderation action on multiple comments. Requires moderator or admin.
      x-source: src/pages/api/admin/comments/bulk-moderate.ts
      operationId: postAdminCommentsBulkModerate
      parameters:
        - name: X-CSRF-Token
          in: header
          required: true
          description: Double‑Submit token; must match cookie 'csrf_token'
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                commentIds:
                  type: array
                  items:
                    type: string
                action:
                  type: string
                  enum: [approve, reject, flag, hide]
                reason:
                  type: string
              required:
                - commentIds
                - action
      responses:
        "200":
          description: Bulk results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden (not admin)
  /api/admin/audit/logs:
    get:
      summary: List audit logs
      description: Returns audit logs with optional filters and cursor-based pagination. Requires admin.
      x-source: src/pages/api/admin/audit/logs/index.ts
      operationId: getAdminAuditLogs
      parameters:
        - name: userId
          in: query
          required: false
          schema:
            type: string
        - name: eventType
          in: query
          required: false
          schema:
            type: string
            enum: [API_ACCESS, ADMIN_ACTION, SECURITY_EVENT]
        - name: from
          in: query
          required: false
          schema:
            type: integer
            format: int64
            description: Unix epoch milliseconds (inclusive)
        - name: to
          in: query
          required: false
          schema:
            type: integer
            format: int64
            description: Unix epoch milliseconds (inclusive)
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 200
            default: 50
        - name: cursor
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Audit logs payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden (not admin)
  /api/admin/audit/logs/{id}:
    get:
      summary: Get audit log by id
      description: Returns a single audit log entry. Requires admin.
      x-source: src/pages/api/admin/audit/logs/[id].ts
      operationId: getAdminAuditLogById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Audit log entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden (not admin)
        "404":
          description: Not found
  /api/admin/users/sessions:
    get:
      summary: List sessions for a user
      description: Returns sessions for the given userId. Requires admin.
      x-source: src/pages/api/admin/users/sessions.ts
      operationId: getAdminUserSessions
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Sessions list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        "400":
          description: Validation error
        "401":
          description: Unauthorized
        "403":
          description: Forbidden (not admin)
  /api/admin/users/revoke-sessions:
    post:
      summary: Revoke sessions for a user or a specific session
      description: Deletes sessions by userId or sessionId. Requires admin and CSRF protection.
      x-source: src/pages/api/admin/users/revoke-sessions.ts
      operationId: postAdminRevokeSessions
      parameters:
        - name: X-CSRF-Token
          in: header
          required: true
          description: Double‑Submit token; must match cookie 'csrf_token'
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                sessionId:
                  type: string
      responses:
        "200":
          description: Revoke result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden (CSRF/Origin or not admin)
        "400":
          description: Validation error
  /api/admin/rate-limits/state:
    get:
      summary: Get rate limiter state
      description: Returns limiter entries for a given limiter name or all.
      x-source: src/pages/api/admin/rate-limits/state.ts
      operationId: getAdminRateLimitsState
      parameters:
        - name: name
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: State
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden (not admin)
  /api/admin/rate-limits/reset:
    post:
      summary: Reset a limiter key
      description: Resets a specific key in a named rate limiter. Requires admin and CSRF.
      x-source: src/pages/api/admin/rate-limits/reset.ts
      operationId: postAdminRateLimitsReset
      parameters:
        - name: X-CSRF-Token
          in: header
          required: true
          description: Double‑Submit token; must match cookie 'csrf_token'
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name, key]
              properties:
                name:
                  type: string
                key:
                  type: string
      responses:
        "200":
          description: Reset result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        "400":
          description: Validation error
        "401":
          description: Unauthorized
        "403":
          description: Forbidden (CSRF/Origin or not admin)
  /api/debug/logs-stream:
    get:
      summary: Stream logs (SSE)
      description: Server-Sent Events endpoint for real-time logs
      x-source: src/pages/api/debug/logs-stream.ts
      operationId: getDebugLogsStream
      responses:
        "200":
          description: SSE stream or JSON fallback
    post:
      summary: Poll logs
      description: Polling fallback for logs-stream
      x-source: src/pages/api/debug/logs-stream.ts
      operationId: postDebugLogsStream
      responses:
        "200":
          description: Polling response with logs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DebugPollingResponse'
  /api/internal/users/sync:
    post:
      summary: Sync user
      description: Internal user sync endpoint (trusted systems)
      x-source: src/pages/api/internal/users/sync.ts
      operationId: postInternalUsersSync
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InternalUserSyncRequest'
      responses:
        "200":
          description: User synced
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
  /api/lead-magnets/download:
    get:
      summary: Get lead magnet metadata or download
      description: Return metadata or proxy download from R2; supports download query param
      x-source: src/pages/api/lead-magnets/download.ts
      operationId: getLeadMagnetsDownload
      responses:
        "200":
          description: Metadata or file redirect
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeadMagnetMetadata'
    post:
      summary: Request lead magnet (email gate)
      description: Submit lead data and receive download URL
      x-source: src/pages/api/lead-magnets/download.ts
      operationId: postLeadMagnetsDownload
      responses:
        "200":
          description: Request accepted, returns downloadUrl and leadId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeadMagnetRequestResponse'
    options:
      summary: CORS preflight
      description: CORS preflight response
      x-source: src/pages/api/lead-magnets/download.ts
      operationId: optionsLeadMagnetsDownload
      responses:
        "200":
          description: CORS preflight ok
  /api/newsletter/confirm:
    get:
      summary: Confirm newsletter subscription
      description: Double opt-in confirmation endpoint
      x-source: src/pages/api/newsletter/confirm.ts
      operationId: getNewsletterConfirm
      responses:
        "200":
          description: Confirmation success
  /api/newsletter/subscribe:
    post:
      summary: Subscribe to newsletter
      description: Create pending subscription and send confirmation email
      x-source: src/pages/api/newsletter/subscribe.ts
      operationId: postNewsletterSubscribe
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewsletterSubscribeRequest'
      responses:
        "200":
          description: Pending subscription created
        "400":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
  /api/projects:
    post:
      summary: Create project
      description: Create new project for authenticated user
      x-source: src/pages/api/projects/index.ts
      operationId: postProjects
      responses:
        "201":
          description: Project created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
  /api/test/seed-email-token:
    get:
      summary: Seed email token (test/dev only)
      description: Generates test tokens for email verification
      x-source: src/pages/api/test/seed-email-token.ts
      operationId: getTestSeedEmailToken
      responses:
        "200":
          description: Token seeded
  /api/user/account:
    delete:
      summary: Delete account
      description: Delete or anonymize user account
      x-source: src/pages/api/user/account.ts
      operationId: deleteUserAccount
      responses:
        "204":
          description: No Content
  /api/user/avatar:
    post:
      summary: Upload avatar
      description: Upload profile image to R2; supports CORS preflight internally
      x-source: src/pages/api/user/avatar.ts
      operationId: postUserAvatar
      responses:
        "200":
          description: Avatar updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
  /api/user/logout-v2:
    get:
      summary: Logout v2 (GET)
      description: Logout endpoint (service-layer)
      x-source: src/pages/api/user/logout-v2.ts
      operationId: getUserLogoutV2
      responses:
        "302":
          description: Redirect after logout
    post:
      summary: Logout v2 (POST)
      description: Logout endpoint (service-layer)
      x-source: src/pages/api/user/logout-v2.ts
      operationId: postUserLogoutV2
      responses:
        "302":
          description: Redirect after logout
  /api/user/logout:
    get:
      summary: Logout (GET)
      description: Logout endpoint
      x-source: src/pages/api/user/logout.ts
      operationId: getUserLogout
      responses:
        "302":
          description: Redirect after logout
    post:
      summary: Logout (POST)
      description: Logout endpoint
      x-source: src/pages/api/user/logout.ts
      operationId: postUserLogout
      responses:
        "302":
          description: Redirect after logout
  /api/user/me:
    get:
      summary: Get current user
      description: Returns safe user object for authenticated user
      x-source: src/pages/api/user/me.ts
      operationId: getUserMe
      responses:
        "200":
          description: User object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSafe'
  /api/user/password:
    post:
      summary: Password change (deprecated)
      description: Stytch-only migration – password changes are no longer supported. Returns 410 Gone (HTML).
      deprecated: true
      x-source: src/pages/api/user/password.ts
      operationId: postUserPassword
      responses:
        "410":
          description: Gone
          content:
            text/html:
              schema:
                type: string
    get:
      summary: Password change (deprecated)
      description: Deprecated endpoint – returns 410 Gone (JSON)
      deprecated: true
      x-source: src/pages/api/user/password.ts
      operationId: getUserPasswordDeprecated
      responses:
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
    put:
      summary: Password change (deprecated)
      description: Deprecated endpoint – returns 410 Gone (JSON)
      deprecated: true
      x-source: src/pages/api/user/password.ts
      operationId: putUserPasswordDeprecated
      responses:
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
    patch:
      summary: Password change (deprecated)
      description: Deprecated endpoint – returns 410 Gone (JSON)
      deprecated: true
      x-source: src/pages/api/user/password.ts
      operationId: patchUserPasswordDeprecated
      responses:
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
    delete:
      summary: Password change (deprecated)
      description: Deprecated endpoint – returns 410 Gone (JSON)
      deprecated: true
      x-source: src/pages/api/user/password.ts
      operationId: deleteUserPasswordDeprecated
      responses:
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
    options:
      summary: Password change (deprecated)
      description: Deprecated endpoint – returns 410 Gone (JSON)
      deprecated: true
      x-source: src/pages/api/user/password.ts
      operationId: optionsUserPasswordDeprecated
      responses:
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
    head:
      summary: Password change (deprecated)
      description: Deprecated endpoint – returns 410 Gone (JSON)
      deprecated: true
      x-source: src/pages/api/user/password.ts
      operationId: headUserPasswordDeprecated
      responses:
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
  /api/user/profile:
    post:
      summary: Update profile
      description: Update user profile data
      x-source: src/pages/api/user/profile.ts
      operationId: postUserProfile
      responses:
        "200":
          description: Profile updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
  /api/user/settings:
    put:
      summary: Update settings
      description: Update user settings
      x-source: src/pages/api/user/settings.ts
      operationId: putUserSettings
      responses:
        "200":
          description: Settings updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
  /r2/{path}:
    get:
      summary: R2 asset proxy (catch-all)
      description: Proxy to R2 assets via catch-all path parameter
      x-source: src/pages/r2/[...path].ts
      operationId: getR2Path
      parameters:
        - name: path
          in: path
          required: true
          description: Catch-all path to R2 object
          schema:
            type: string
      responses:
        "200":
          description: Asset stream or redirect
  /r2-ai/{path}:
    get:
      summary: R2 AI Images Proxy (catch-all)
      description: Proxy für R2 AI-Images mit Owner-Gating für Ergebnisse. Uploads unter 'ai-enhancer/uploads/...' sind öffentlich (für externe Provider-Fetches). Ergebnisse unter 'ai-enhancer/results/<ownerType>/<ownerId>/...' sind nur für den Besitzer zugänglich. Setzt Cache-Control Header (uploads kurz öffentlich, results privat lang).
      x-source: src/pages/r2-ai/[...path].ts
      operationId: getR2AiPath
      parameters:
        - name: path
          in: path
          required: true
          description: Catch-all Pfad zum R2-Objekt
          schema:
            type: string
      responses:
        "200":
          description: Datei-Stream
  /api/ai-image/generate:
    post:
      summary: AI-Image synchron erzeugen/verbessern
      description: |
        Nimmt ein Bild als multipart/form-data entgegen, lädt Original in R2 hoch, ruft Replicate auf (in Dev ggf. Echo)
        und speichert das Ergebnis erneut in R2. Antwort enthält Limits und Usage.
        Hinweis: Provider-Fehler werden vereinheitlicht gemappt – 401/403 → forbidden, 4xx → validation_error, 5xx → server_error.
      x-source: src/pages/api/ai-image/generate.ts
      operationId: postAiImageGenerate
      parameters:
        - name: X-CSRF-Token
          in: header
          required: true
          description: CSRF-Token; muss mit Cookie 'csrf_token' übereinstimmen (Double-Submit-Pattern)
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                model:
                  type: string
                scale:
                  type: integer
                  enum: [2, 4]
                face_enhance:
                  type: boolean
              required:
                - image
                - model
      responses:
        "200":
          description: Erfolg – Ergebnis-URL und Limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AiGenerateSuccessResponse'
        "400":
          description: Validierungsfehler
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        "403":
          description: Verboten (CSRF/Origin)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        "429":
          description: Rate limit exceeded
          headers:
            Retry-After:
              description: Seconds until the limit resets
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        "500":
          description: Serverfehler
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
  /api/webscraper/extract:
    post:
      summary: Extract webpage content
      description: |
        Extracts structured content from a public webpage with robots.txt compliance and quotas.
        Secured via Same‑Origin checks and Double‑Submit CSRF on POST. Rate limited (10/min).
      x-source: src/pages/api/webscraper/extract.ts
      operationId: postWebscraperExtract
      parameters:
        - name: X-CSRF-Token
          in: header
          required: true
          description: CSRF-Token; must match cookie 'csrf_token' (Double‑Submit)
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebscraperRequest'
      responses:
        "200":
          description: Success — extracted content and usage info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebscraperExtractSuccessResponse'
        "400":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        "403":
          description: Forbidden (feature flag off, CSRF/Origin, robots.txt blocked)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        "429":
          description: Rate limit exceeded
          headers:
            Retry-After:
              description: Seconds until the limit resets
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
  /api/webscraper/usage:
    get:
      summary: Webscraper usage/limits
      description: |
        Returns current 24h usage and effective plan‑based limit for the current owner (user or guest with guest_id cookie).
        Note: usage.limit is authoritative; static limits are legacy/debug only.
      x-source: src/pages/api/webscraper/usage.ts
      operationId: getWebscraperUsage
      responses:
        "200":
          description: Usage/Limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageSuccessResponse'
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
  /api/voice/stream:
    get:
      summary: Voice transcription stream (SSE)
      description: |
        Server‑Sent Events Stream für Transkriptions‑Feedback. Liefert u. a. ein
        `connected`‑Event mit `jobId` sowie ggf. `partial`, `final` und `usage` Events.
        Deaktivierbar über Flag `VOICE_STREAM_SSE`.
      x-source: src/pages/api/voice/stream.ts
      operationId: getVoiceStream
      responses:
        "200":
          description: SSE stream
          content:
            text/event-stream:
              schema:
                type: string
              examples:
                connected:
                  summary: Connected event with jobId
                  value: |
                    event: connected
                    data: {"jobId":"<uuid>"}
                    
                heartbeat:
                  summary: Heartbeat comment to keep connection alive
                  value: |
                    :keep-alive
                    
        "404":
          description: Streaming disabled
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
  /api/voice/poll:
    get:
      summary: Voice job state polling
      description: |
        Pollt den aktuellen Zustand eines Voice‑Jobs. Deaktivierbar über Flag `VOICE_STREAM_POLL`.
      x-source: src/pages/api/voice/poll.ts
      operationId: getVoicePoll
      parameters:
        - name: jobId
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Aktueller Zustand
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoicePollSuccessResponse'
        "400":
          description: Validierungsfehler
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        "404":
          description: Polling disabled
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
  /api/ai-image/usage:
    get:
      summary: AI-Image-Nutzung/Limits abrufen
      description: |
        Liefert den aktuellen Usage-Stand und Limits (24h Fenster) für den aktuellen Besitzer (User oder Gast mit `guest_id`-Cookie).
        Hinweis: usage.limit ist plan-bereinigt und maßgeblich für die Anzeige und Validierungen.
        Die Felder limits.user/guest sind statische Defaults (legacy/debug) und können vom effektiven Limit abweichen.
      x-source: src/pages/api/ai-image/usage.ts
      operationId: getAiImageUsage
      responses:
        "200":
          description: Usage/Limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageSuccessResponse'
        "500":
          description: Serverfehler
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
  /api/ai-image/jobs:
    post:
      summary: AI-Image-Job erstellen
      description: |
        Lädt ein Bild hoch und erstellt einen AI-Enhance-Job. Antwortet mit 202 und Jobdaten.
        Hinweis: Provider-Fehler werden vereinheitlicht gemappt – 401/403 → forbidden, 4xx → validation_error, 5xx → server_error.
      x-source: src/pages/api/ai-image/jobs/index.ts
      operationId: postAiImageJobs
      parameters:
        - name: X-CSRF-Token
          in: header
          required: true
          description: CSRF-Token; muss mit Cookie 'csrf_token' übereinstimmen (Double-Submit-Pattern)
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                model:
                  type: string
              required:
                - image
                - model
      responses:
        "202":
          description: Job angenommen
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AiJobSuccessResponse'
        "400":
          description: Validierungsfehler
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        "403":
          description: Verboten
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        "429":
          description: Rate limit exceeded
          headers:
            Retry-After:
              description: Seconds until the limit resets
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        "500":
          description: Serverfehler
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
  /api/ai-image/jobs/{id}:
    get:
      summary: AI-Image-Job abfragen
      description: |
        Fragt den Status eines AI-Image-Jobs ab und führt Verarbeitung bei Bedarf aus.
        Hinweis: Provider-Fehler werden vereinheitlicht gemappt – 401/403 → forbidden, 4xx → validation_error, 5xx → server_error.
      x-source: src/pages/api/ai-image/jobs/[id].ts
      operationId: getAiImageJob
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Jobdaten
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AiJobSuccessResponse'
        "403":
          description: Verboten (Owner-Gating)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        "404":
          description: Job nicht gefunden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        "429":
          description: Rate limit exceeded
          headers:
            Retry-After:
              description: Seconds until the limit resets
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        "500":
          description: Serverfehler
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
  /api/ai-image/jobs/{id}/cancel:
    post:
      summary: AI-Image-Job abbrechen
      description: Bricht einen laufenden oder wartenden Job ab (Owner-Gating).
      x-source: src/pages/api/ai-image/jobs/[id]/cancel.ts
      operationId: postAiImageJobCancel
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: X-CSRF-Token
          in: header
          required: true
          description: CSRF-Token; muss mit Cookie 'csrf_token' übereinstimmen (Double-Submit-Pattern)
          schema:
            type: string
      responses:
        "200":
          description: Job abgebrochen oder bereits in Terminalzustand
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AiJobSuccessResponse'
        "403":
          description: Verboten (Owner-Gating)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        "404":
          description: Job nicht gefunden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        "429":
          description: Rate limit exceeded
          headers:
            Retry-After:
              description: Seconds until the limit resets
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
  /api/voice/transcribe:
    post:
      summary: Voice transcription (audio chunk)
      description: |
        Nimmt ein Audio-Chunk (Opus WebM/OGG) als multipart/form-data entgegen und liefert das Transkript
        zusammen mit aktuellen Limits/Usage zurück. Provider-Fehler werden vereinheitlicht gemappt –
        401/403 → forbidden, 4xx → validation_error, 5xx → server_error. CSRF/Origin ist aktiviert.
      x-source: src/pages/api/voice/transcribe.ts
      operationId: postVoiceTranscribe
      parameters:
        - name: X-CSRF-Token
          in: header
          required: true
          description: CSRF-Token; muss mit Cookie 'csrf_token' übereinstimmen (Double-Submit-Pattern)
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VoiceTranscribeRequest'
      responses:
        "200":
          description: Erfolg – Transkript und Limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoiceTranscribeSuccessResponse'
        "400":
          description: Validierungsfehler
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        "403":
          description: Verboten (CSRF/Origin)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        "429":
          description: Rate limit exceeded
          headers:
            Retry-After:
              description: Seconds until the limit resets
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        "500":
          description: Serverfehler
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
  /api/voice/usage:
    get:
      summary: Voice-Nutzung/Limits abrufen
      description: |
        Liefert den aktuellen Usage-Stand und Limits (24h Fenster) für den aktuellen Besitzer (User oder Gast mit `guest_id`-Cookie).
        Hinweis: usage.limit ist maßgeblich für UI und Validierungen. `data.plan` kann optional enthalten sein.
      x-source: src/pages/api/voice/usage.ts
      operationId: getVoiceUsage
      responses:
        "200":
          description: Usage/Limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageSuccessResponse'
        "500":
          description: Serverfehler
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
  /api/prompt-enhance:
    post:
      summary: Prompt Enhancer – Text verbessern
      description: |
        Nimmt Text (optional mit Dateien) entgegen und liefert einen verbesserten Prompt zurück, inkl. Safety-Report und Usage.
        Hinweis: usage.limit ist maßgeblich; Felder limits.user/guest spiegeln die statischen Quoten für Debug wider.
      x-source: src/pages/api/prompt-enhance.ts
      operationId: postPromptEnhance
      parameters:
        - name: X-CSRF-Token
          in: header
          required: true
          description: CSRF-Token; muss mit Cookie 'csrf_token' übereinstimmen (Double-Submit-Pattern)
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PromptEnhanceRequest'
          multipart/form-data:
            schema:
              type: object
              properties:
                text:
                  type: string
                  minLength: 1
                  maxLength: 1000
                mode:
                  type: string
                file:
                  type: string
                  format: binary
                files[]:
                  type: string
                  format: binary
              required:
                - text
      responses:
        "200":
          description: Erfolg – Verbesserter Prompt und Usage
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromptEnhanceSuccessResponse'
        "400":
          description: Validierungsfehler
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        "403":
          description: Verboten (Feature deaktiviert oder Quota überschritten)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        "429":
          description: Rate limit exceeded
          headers:
            Retry-After:
              description: Seconds until the limit resets
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        "500":
          description: Serverfehler
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
  /api/billing/credits:
    post:
      summary: Create Stripe Checkout session for credits
      description: Creates a Stripe Checkout Session for one-time credit packs (200 / 1000 images)
      x-source: src/pages/api/billing/credits.ts
      operationId: postBillingCredits
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillingCreditsRequest'
      responses:
        "200":
          description: Session URL
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                required:
                  - url
        "400":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
  /api/templates:
    post:
      summary: Save a prompt template
      description: Saves a named prompt template for the authenticated user (KV-backed)
      x-source: src/pages/api/templates.ts
      operationId: postTemplates
      parameters:
        - name: X-CSRF-Token
          in: header
          required: true
          description: CSRF-Token; must match cookie 'csrf_token' (Double‑Submit)
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateSaveRequest'
      responses:
        "200":
          description: Saved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateSaveSuccessResponse'
        "400":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
  /api/prompt/usage:
    get:
      summary: Prompt-Nutzung/Limits abrufen
      description: |
        Liefert den aktuellen Usage-Stand und Limits (24h Fenster) für den aktuellen Besitzer (User oder Gast mit `guest_id`-Cookie).
        Hinweis: usage.limit ist maßgeblich für UI und Validierungen; limits.* sind statische Quoten.
      x-source: src/pages/api/prompt/usage.ts
      operationId: getPromptUsage
      responses:
        "200":
          description: Usage/Limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageSuccessResponse'
        "500":
          description: Serverfehler
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
components:
    schemas:
      NewsletterSubscribeRequest:
        type: object
        properties:
          email:
            type: string
            format: email
          firstName:
            type: string
            minLength: 1
            maxLength: 100
          consent:
            type: boolean
            enum: [true]
          source:
            type: string
            minLength: 1
            maxLength: 100
        required:
          - email
          - consent
      BillingCreditsRequest:
        type: object
        properties:
          pack:
            type: integer
            enum: [200, 1000]
          workspaceId:
            type: string
            minLength: 1
            maxLength: 100
          returnTo:
            type: string
            maxLength: 300
        required:
          - pack
      TemplateSaveRequest:
        type: object
        properties:
          templateId:
            type: string
            minLength: 1
            maxLength: 100
          name:
            type: string
            minLength: 1
            maxLength: 200
          description:
            type: string
            minLength: 1
            maxLength: 500
          prompt:
            type: string
            minLength: 1
            maxLength: 5000
        required:
          - templateId
          - name
          - description
          - prompt
      TemplateSaveSuccessResponse:
        type: object
        properties:
          success:
            type: boolean
          data:
            type: object
            properties:
              message:
                type: string
              templateId:
                type: string
        required:
          - success
          - data
      DashboardPerformActionRequest:
        type: object
        description: Discriminated action for dashboard operations
        properties:
          action:
            type: string
            enum:
              - create_project
              - create_task
              - invite_member
              - view_docs
        required:
          - action
        additionalProperties: false
      NewsletterUnsubscribeRequest:
        type: object
        properties:
          email:
            type: string
            format: email
        required:
          - email
      BillingCancelRequest:
        type: object
        properties:
          subscriptionId:
            type: string
            minLength: 1
        required:
          - subscriptionId
      InternalUserSyncRequest:
        type: object
        description: Minimal user payload for internal sync
        properties:
          id:
            type: string
            minLength: 1
          email:
            type: string
            format: email
          name:
            type: string
            minLength: 1
          image:
            type: string
            minLength: 1
        required:
          - id
          - email
      WebscraperRequest:
        type: object
        description: Request for Webscraper extract. Server performs SSRF-safety checks (http/https only; localhost/private ranges blocked).
        properties:
          url:
            type: string
            minLength: 1
            description: Must be http/https and not local/private.
          options:
            type: object
            additionalProperties: true
        required:
          - url
      VoiceTranscribeRequest:
        type: object
        description: Multipart form fields for voice transcription chunk upload.
        properties:
          chunk:
            type: string
            format: binary
          sessionId:
            type: string
            minLength: 1
          jobId:
            type: string
          lang:
            type: string
            maxLength: 10
          isLastChunk:
            type: boolean
        required:
          - chunk
          - sessionId
      PromptEnhanceRequest:
        type: object
        description: Normalized request for Prompt Enhancer. Legacy shapes (input.text, mode at top-level) are accepted by the server but this schema represents the canonical form.
        properties:
          text:
            type: string
            minLength: 1
            maxLength: 1000
          mode:
            type: string
            enum: [agent, concise]
          safety:
            type: boolean
          includeScores:
            type: boolean
          outputFormat:
            type: string
            enum: [markdown, json]
        required:
          - text
      GenericResponse:
        type: object
        properties:
          success:
            type: boolean
      Tool:
        type: object
        properties:
          id:
            type: string
          name:
            type: string
          description:
            type: string
      Activity:
        type: object
        properties:
          id:
            type: string
          user:
            type: string
          action:
            type: string
          timestamp:
            type: string
      Notification:
        type: object
        properties:
          id:
            type: string
          title:
            type: string
          body:
            type: string
      Project:
        type: object
        properties:
          id:
            type: string
          title:
            type: string
          description:
            type: string
      QuickAction:
        type: object
        properties:
          id:
            type: string
          title:
            type: string
          description:
            type: string
      Stats:
        type: object
        properties:
          projects:
            type: integer
          tasks:
            type: integer
          teamMembers:
            type: integer
      DebugPollingResponse:
        type: object
        properties:
          success:
            type: boolean
          data:
            type: object
      LeadMagnetMetadata:
        type: object
        properties:
          id:
            type: string
          title:
            type: string
          description:
            type: string
          fileName:
            type: string
          requiresEmail:
            type: boolean
      LeadMagnetRequestResponse:
        type: object
        properties:
          success:
            type: boolean
          leadId:
            type: string
          downloadUrl:
            type: string
      UserSafe:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
          name:
            type: string
          username:
            type: string
      ApiError:
        type: object
        properties:
          type:
            type: string
          message:
            type: string
          details:
            type: object
            additionalProperties: true
      ApiErrorResponse:
        type: object
        properties:
          success:
            type: boolean
            enum: [false]
          error:
            $ref: '#/components/schemas/ApiError'
        required:
          - success
          - error
      AiJobStatus:
        type: string
        enum: [queued, processing, succeeded, failed, canceled]
      AiJobInput:
        type: object
        nullable: true
        properties:
          key:
            type: string
          url:
            type: string
            nullable: true
          contentType:
            type: string
            nullable: true
          size:
            type: integer
            format: int64
            nullable: true
      AiJobOutput:
        type: object
        nullable: true
        properties:
          key:
            type: string
          url:
            type: string
            nullable: true
      UsageInfo:
        type: object
        nullable: true
        properties:
          used:
            type: integer
          limit:
            type: integer
          resetAt:
            type: integer
            format: int64
            nullable: true
      VoicePollSuccessResponse:
        type: object
        properties:
          success:
            type: boolean
            enum: [true]
          data:
            type: object
            properties:
              status:
                type: string
                enum: [active, done, error, not_found]
              partials:
                type: array
                items:
                  type: string
              final:
                type: string
                nullable: true
              usage:
                $ref: '#/components/schemas/UsageInfo'
              updatedAt:
                type: integer
                format: int64
      AiJob:
        type: object
        properties:
          id:
            type: string
          status:
            $ref: '#/components/schemas/AiJobStatus'
          provider:
            type: string
            enum: [replicate]
          model:
            type: string
            nullable: true
          input:
            $ref: '#/components/schemas/AiJobInput'
          output:
            $ref: '#/components/schemas/AiJobOutput'
          error:
            type: string
            nullable: true
          createdAt:
            type: string
            format: date-time
          updatedAt:
            type: string
            format: date-time
          usage:
            $ref: '#/components/schemas/UsageInfo'
      AiJobSuccessResponse:
        type: object
        properties:
          success:
            type: boolean
            enum: [true]
          data:
            $ref: '#/components/schemas/AiJob'
      AiGenerateData:
        type: object
        properties:
          model:
            type: string
          originalUrl:
            type: string
          imageUrl:
            type: string
          charge:
            type: object
            nullable: true
            properties:
              total:
                type: number
              planPortion:
                type: number
              creditsPortion:
                type: number
          usage:
            $ref: '#/components/schemas/UsageInfo'
          limits:
            type: object
            properties:
              user:
                type: integer
              guest:
                type: integer
      AiGenerateSuccessResponse:
        type: object
        properties:
          success:
            type: boolean
            enum: [true]
          data:
            $ref: '#/components/schemas/AiGenerateData'
        required:
          - success
          - data
      PromptEnhanceData:
        type: object
        properties:
          enhancedPrompt:
            type: string
          safetyReport:
            type: object
            nullable: true
            properties:
              score:
                type: number
              warnings:
                type: array
                items:
                  type: string
          usage:
            $ref: '#/components/schemas/UsageInfo'
          limits:
            type: object
            properties:
              user:
                type: integer
              guest:
                type: integer
      PromptEnhanceSuccessResponse:
        type: object
        properties:
          success:
            type: boolean
            enum: [true]
          data:
            $ref: '#/components/schemas/PromptEnhanceData'
        required:
          - success
          - data
      WebscraperResult:
        type: object
        properties:
          url:
            type: string
          title:
            type: string
          description:
            type: string
            nullable: true
          text:
            type: string
          metadata:
            type: object
            properties:
              author:
                type: string
                nullable: true
              publishDate:
                type: string
                nullable: true
              language:
                type: string
                nullable: true
              charset:
                type: string
                nullable: true
              ogImage:
                type: string
                nullable: true
              ogTitle:
                type: string
                nullable: true
              ogDescription:
                type: string
                nullable: true
              twitterCard:
                type: string
                nullable: true
              canonical:
                type: string
                nullable: true
          links:
            type: array
            items:
              type: string
          images:
            type: array
            items:
              type: string
          scrapedAt:
            type: string
            description: ISO timestamp
          robotsTxtAllowed:
            type: boolean
      WebscraperExtractData:
        type: object
        properties:
          result:
            $ref: '#/components/schemas/WebscraperResult'
          usage:
            $ref: '#/components/schemas/UsageInfo'
      WebscraperExtractSuccessResponse:
        type: object
        properties:
          success:
            type: boolean
            enum: [true]
          data:
            $ref: '#/components/schemas/WebscraperExtractData'
        required:
          - success
          - data
      UsageSuccessResponse:
        type: object
        properties:
          success:
            type: boolean
            enum: [true]
          data:
            type: object
            properties:
              ownerType:
                type: string
                enum: [user, guest]
              usage:
                $ref: '#/components/schemas/UsageInfo'
              limits:
                type: object
                properties:
                  user:
                    type: integer
                  guest:
                    type: integer
        required:
          - success
          - data
      VoiceTranscribeData:
        type: object
        properties:
          sessionId:
            type: string
          text:
            type: string
          isFinal:
            type: boolean
          usage:
            $ref: '#/components/schemas/UsageInfo'
          limits:
            type: object
            properties:
              user:
                type: integer
              guest:
                type: integer
      VoiceTranscribeSuccessResponse:
        type: object
        properties:
          success:
            type: boolean
            enum: [true]
          data:
            $ref: '#/components/schemas/VoiceTranscribeData'