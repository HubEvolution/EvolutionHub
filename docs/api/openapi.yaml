openapi: 3.0.0
info:
  title: Evolution Hub API
  description: API for Evolution Hub, including auth, AI tools, billing, and more.
  version: 1.0.0
servers:
  - url: https://api.hub-evolution.com/v1
    description: Production server
  - url: http://127.0.0.1:8787/v1
    description: Local development server
paths:
  /api/auth/magic/request:
    post:
      summary: Request Magic Link
      description: Request a magic link for login or signup. Returns JSON success or an HTML redirect (progressive enhancement).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                r:
                  type: string
                  description: Optional relative redirect target after auth
                name:
                  type: string
                username:
                  type: string
                locale:
                  type: string
                  enum: [de, en]
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                r:
                  type: string
                name:
                  type: string
                username:
                  type: string
                locale:
                  type: string
                  enum: [de, en]
      responses:
        '200':
          description: Magic link request accepted (JSON)
        '303':
          description: Redirect to localized login page with success hint (HTML navigation)
  /api/auth/callback:
    get:
      summary: Magic Link callback
      description: Verifies the magic link token, creates a session, and redirects to the target route.
      parameters:
        - name: token
          in: query
          required: true
          schema:
            type: string
        - name: email
          in: query
          required: false
          schema:
            type: string
        - name: r
          in: query
          required: false
          schema:
            type: string
      responses:
        '302':
          description: Redirect to target route (localized)
  /api/prompt-enhance:
    post:
      summary: Enhance prompt
      description: Transforms raw text into a structured, AI-ready prompt using the Prompt Enhancer Service. Supports guest and authenticated users with quota management. Feature gated by PUBLIC_PROMPT_ENHANCER_V1.
      tags:
        - AI Tools
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  type: object
                  required:
                    - text
                  properties:
                    text:
                      type: string
                      description: The raw text to enhance into a structured prompt.
                      minLength: 1
                      maxLength: 5000
                options:
                  type: object
                  properties:
                    mode:
                      type: string
                      enum: [agent, concise]
                      default: agent
                      description: Mode for rewriting the prompt ('agent' for step-by-step, 'concise' for shortened version).
                    safety:
                      type: boolean
                      default: true
                      description: Enable safety checks to mask PII (emails, phones, addresses, IDs).
                    includeScores:
                      type: boolean
                      default: false
                      description: Include quality scores (clarity, specificity, testability) in response.
                    outputFormat:
                      type: string
                      enum: [markdown, json]
                      default: markdown
                      description: Output format for the enhanced prompt.
              required:
                - input
      responses:
        '200':
          description: Successful enhancement
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      enhanced:
                        $ref: '#/components/schemas/EnhancedPrompt'
                      safetyReport:
                        $ref: '#/components/schemas/SafetyReport'
                      scores:
                        $ref: '#/components/schemas/Scores'
                        description: Optional quality scores if includeScores=true.
                      usage:
                        $ref: '#/components/schemas/UsageInfo'
                required:
                  - enhanced
                  - safetyReport
                  - usage
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '401':
          description: Quota exceeded or feature disabled
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '429':
          description: Rate limit exceeded
          headers:
            Retry-After:
              schema:
                type: integer
              description: Seconds to wait before retry.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  # ... other paths
components:
  schemas:
    EnhancedPrompt:
      type: object
      properties:
        role:
          type: string
          description: Role for the AI agent (e.g., 'You are an expert content creator.').
        objective:
          type: string
          description: Clear objective derived from input text.
        constraints:
          type: string
          description: Constraints for the response (e.g., word limits, PII masking).
        outputFormat:
          type: string
          description: Desired output format (e.g., 'Markdown with sections').
        steps:
          type: array
          items:
            type: string
          description: Optional step-by-step plan for complex prompts.
        fewShotExamples:
          type: array
          items:
            type: string
          description: Optional few-shot examples for guidance.
        rawText:
          type: string
          description: Original input text (safety-cleaned if enabled).
      required:
        - role
        - objective
        - constraints
        - outputFormat
        - rawText
    SafetyReport:
      type: object
      properties:
        masked:
          type: array
          items:
            type: string
          description: List of masked PII strings.
        types:
          type: array
          items:
            type: string
            enum: [email, phone, address, id]
          description: Types of masked PII.
      required:
        - masked
        - types
    Scores:
      type: object
      properties:
        clarity:
          type: number
          minimum: 0
          maximum: 1
          description: Clarity score based on structure completeness.
        specificity:
          type: number
          minimum: 0
          maximum: 1
          description: Specificity score based on keyword density and intent.
        testability:
          type: number
          minimum: 0
          maximum: 1
          description: Testability score based on presence of steps.
      required:
        - clarity
        - specificity
        - testability
    UsageInfo:
      type: object
      properties:
        used:
          type: integer
          description: Number of enhancements used in current period.
        limit:
          type: integer
          description: Daily limit (20 for users, 5 for guests).
        resetAt:
          type: integer
          format: timestamp
          description: Unix timestamp for quota reset (if applicable).
      required:
        - used
        - limit
    ApiError:
      type: object
      properties:
        success:
          type: boolean
          enum: [false]
        error:
          type: string
          description: Error message.
        code:
          type: string
          description: Error code (e.g., 'validation_error', 'quota_exceeded').
        details:
          type: object
          description: Additional error details (e.g., usage info).
      required:
        - success
        - error
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: session