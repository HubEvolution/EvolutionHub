name: Testing Auth Smoke

on:
  workflow_dispatch:
    inputs:
      run:
        description: 'Run testing auth smoke against ci.hub-evolution.com'
        required: false
        default: 'false'
  schedule:
    - cron: '0 12 * * *' # daily at 12:00 UTC

jobs:
  testing-auth-smoke:
    if: ${{ github.event_name == 'schedule' || github.event.inputs.run == 'true' }}
    runs-on: ubuntu-latest
    timeout-minutes: 10

    env:
      TEST_BASE_URL: https://ci.hub-evolution.com
      STYTCH_TEST_EMAIL: ${{ secrets.STYTCH_TEST_EMAIL }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies (minimal)
        run: npm ci --ignore-scripts

      - name: 'Preflight: POST /api/auth/magic/request (log status + body)'
        run: |
          echo "POSTing to ${TEST_BASE_URL}/api/auth/magic/request with STYTCH_TEST_EMAIL=${STYTCH_TEST_EMAIL}"
          set -o pipefail
          curl -i -X POST "${TEST_BASE_URL}/api/auth/magic/request" \
            -H "Origin: https://ci.hub-evolution.com" \
            -H "Content-Type: application/json" \
            --data "{\"email\":\"${STYTCH_TEST_EMAIL}\",\"r\":\"/dashboard\",\"locale\":\"en\"}"

      - name: 'Preflight: GET /en/login (check OAuth link)'
        run: |
          set -o pipefail
          HTML=$(curl -s "${TEST_BASE_URL}/en/login")
          echo "$HTML" | sed -n '1,80p'
          echo "$HTML" | grep -E "login-(test\.)?hub-evolution\.com|/api/auth/oauth/" >/dev/null || {
            echo "Expected OAuth link not found on login page" >&2; exit 1; }

      - name: 'Smoke: OAuth callback with invalid token yields login error redirect'
        run: |
          set -o pipefail
          RES=$(curl -i "${TEST_BASE_URL}/api/auth/oauth/github/callback?stytch_token_type=oauth&token=invalid-token" | sed -n '1,20p')
          echo "$RES"
          echo "$RES" | grep -E "^Location: .*/login\?magic_error=|^HTTP/.* 302" >/dev/null || {
            echo "Expected 302 redirect to login with error from OAuth callback" >&2; exit 1; }
