name: Deploy to Cloudflare

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        type: choice
        options:
          - staging
          - production
        default: 'staging'

permissions:
  contents: write
  pull-requests: read

jobs:
  pre-deploy:
    name: Pre-Deploy Checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run Lint
        run: npm run lint

      - name: Run Format Check
        run: npm run format:check

      - name: Run TypeScript Check
        run: npx astro check --tsconfig tsconfig.astro.json || npx astro check

      - name: Run Unit Tests with Coverage
        run: npm run test:coverage

      - name: Run Security Audit
        run: npm audit --audit-level=moderate

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: pre-deploy
    if: |
      (github.event_name == 'workflow_dispatch' && inputs.environment == 'staging') ||
      (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v'))
    environment:
      name: staging
      url: https://staging.hub-evolution.com
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build Worker
        run: npm run build:worker

      - name: Deploy to Cloudflare (Staging)
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: deploy --env staging

      - name: Health Check (Staging)
        run: |
          sleep 10
          npm run health-check -- --url https://staging.hub-evolution.com

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [pre-deploy, deploy-staging]
    if: |
      (github.event_name == 'workflow_dispatch' && inputs.environment == 'production') ||
      (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v'))
    environment:
      name: production
      url: https://hub-evolution.com
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build Worker
        run: npm run build:worker

      - name: Deploy to Cloudflare (Production)
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: deploy --env production

      - name: Health Check (Production)
        run: |
          sleep 10
          npm run health-check -- --url https://hub-evolution.com

      - name: Create GitHub Release
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: |
            ## Deployment Summary

            - **Environment:** Production
            - **Version:** ${{ github.ref_name }}
            - **Deployed at:** ${{ github.event.head_commit.timestamp }}
            - **URL:** https://hub-evolution.com

            ### Changes
            See commit history for detailed changes.

            ### Health Check
            All services operational ✅
          draft: false
          prerelease: false

  notify-failure:
    name: Notify on Failure
    runs-on: ubuntu-latest
    needs: [pre-deploy, deploy-staging, deploy-production]
    if: failure()
    steps:
      - name: Log Failure
        run: |
          echo "❌ Deployment failed!"
          echo "Workflow: ${{ github.workflow }}"
          echo "Trigger: ${{ github.event_name }}"
          echo "Ref: ${{ github.ref }}"
